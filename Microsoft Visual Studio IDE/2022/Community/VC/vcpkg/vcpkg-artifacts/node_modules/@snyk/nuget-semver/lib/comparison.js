const parseVersion = require('./version-parser');

module.exports = {
  gt,
  gte,
  lt,
  lte,
  eq,
  neq,
  cmp,
  compare,
  rcompare,
  diff,
};

function gt(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver1, semver2);
  if (versionCompare === 0 && compareQualifiers(semver1, semver2) === 1) {
    return true;
  }
  if (versionCompare === 1) {
    return true;
  }
  return false;
}

function gte(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver1, semver2);
  if (versionCompare === 0 && compareQualifiers(semver1, semver2) !== -1) {
    return true;
  }
  if (versionCompare === 1) {
    return true;
  }
  return false;
}

function lt(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver1, semver2);
  if (versionCompare === 0 && compareQualifiers(semver1, semver2) === -1) {
    return true;
  }
  if (versionCompare === -1) {
    return true;
  }
  return false;
}

function lte(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver1, semver2);
  if (versionCompare === 0 && compareQualifiers(semver1, semver2) !== 1) {
    return true;
  }
  if (versionCompare === -1) {
    return true;
  }
  return false;
}

function eq(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  return (compareVersions(semver1, semver2) === 0 &&
    compareQualifiers(semver1, semver2) === 0);
}

function neq(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  return (compareVersions(semver1, semver2) !== 0 ||
    compareQualifiers(semver1, semver2) !== 0);
}

function cmp(v1, comparator, v2) {
  switch (comparator) {
    case '>': {
      return gt(v1, v2);
    }
    case '>=': {
      return gte(v1, v2);
    }
    case '<': {
      return lt(v1, v2);
    }
    case '<=': {
      return lte(v1, v2);
    }
    case '==': {
      return eq(v1, v2);
    }
    case '!=': {
      return neq(v1, v2);
    }
    case '===': {
      return strictEq(v1, v2);
    }
    case '!==': {
      return !strictEq(v1, v2);
    }
    default: {
      throw new Error(`Invalid comparator: ${comparator}`);
    }
  }
}

function strictEq(v1, v2) {
  return parseVersion(v1).getAsText() === parseVersion(v2).getAsText();
}

function compare(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver1, semver2);
  if (versionCompare === 0) {
    return compareQualifiers(semver1, semver2);
  }
  return versionCompare;
}

function rcompare(v1, v2) {
  let semver1 = parseVersion(v1);
  let semver2 = parseVersion(v2);
  let versionCompare = compareVersions(semver2, semver1);
  if (versionCompare === 0) {
    return compareQualifiers(semver2, semver1);
  }
  return versionCompare;
}

function compareVersions(semver1, semver2) {
  let v1 = semver1.getVersions();
  let v2 = semver2.getVersions();
  let max = v1.length > v2.length ? v1.length : v2.length;
  for (let i = 0; i < max; i++) {
    // handle wildcard comparison. since for wildcard we always compare 2.*
    // with 2.3.4,for the * we should return * as if it matches the comparison
    if (v1[i] === '*' || v2[i] === '*') {
      return 0;
    }
    if ((v1[i] || 0) < (v2[i] || 0)) {
      return -1;
    }
    if ((v1[i] || 0) > (v2[i] || 0)) {
      return 1;
    }
  }
  return 0;
}

function compareQualifiers(semver1, semver2) {
  let q1 = semver1.getQualifiersAsText();
  let q2 = semver2.getQualifiersAsText();

  // remove the leading dash so "sec" will be bigger than all other qualifiers
  if (q1.indexOf('-sec') === 0) { q1 = q1.slice(1); }
  if (q2.indexOf('-sec') === 0) { q2 = q2.slice(1); }

  if (q1.length > 0 && q2.length === 0) {
    return q1.indexOf('sec') === 0 ? 1 : -1;
  }
  if (q2.length > 0 && q1.length === 0) {
    return q2.indexOf('sec') === 0 ? -1 : 1;
  }

  if (q1 > q2) {
    return 1;
  }
  if (q1 < q2) {
    return -1;
  }
  return 0;
}


function diff(version1, version2) {
  if (eq(version1, version2)) { return null; }

  const v1 = parseVersion(version1);
  const v2 = parseVersion(version2);

  const types = ['major', 'minor', 'patch'];
  const length = Math.max(v1._versions.length, v2._versions.length);

  if (v1._qualifiers.length || v2._qualifiers.length) {
    for (let i = 0; i < length; i++) {
      if (v1._versions[i] !== v2._versions[i]) {
        return 'pre' + (types[i] || 'patch');
      }
    }
    return 'prerelease';
  }
  for (let i = 0; i < length; i++) {
    if (v1._versions[i] !== v2._versions[i]) {
      return types[i] || 'patch';
    }
  }
  return null;
}

// SIG // Begin signature block
// SIG // MIIoaAYJKoZIhvcNAQcCoIIoWTCCKFUCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // T14HkBbrXsZdviE4EyyKc31jaw77ILGC3G4Z6yC68Q6g
// SIG // gg2aMIIGGDCCBACgAwIBAgITMwAAA/O5amS77/ftYwAA
// SIG // AAAD8zANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTI0MDcxNzIxMDIzNFoX
// SIG // DTI1MDkxNTIxMDIzNFowgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCAzcmQgUGFydHkg
// SIG // QXBwbGljYXRpb24gQ29tcG9uZW50MIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuJZyYTUkf/jOL2+w
// SIG // jAIr0zGEmBItBJx10kg2rf/QcDw9otBdYY+1vNFvHRLp
// SIG // b+dX89TQCCym3iKdiWku++5n32B38TFMPwXELMs1uidX
// SIG // ucVDzYLhlNhhV63ObPo8it/QCKROgE2XnIzA7gLuD9Z1
// SIG // RHGSg0dHwWz+0PAhXtdz4J2Yt5/+FF28GhJbxZK8ImuM
// SIG // IfPICfu5QxZGVDiNR9ccRDYD/cti5Qon6xzmoQF3GPk2
// SIG // ksnmar/hNI1eUpAavMzRQnlsjG6KCTz7Ehvi0BH0trDu
// SIG // MTazR2TJSYs4le/YddqsS4nD3rMLoDXQ/mgV6hdH8KKL
// SIG // z7r0sGik/8DPKJDTMQIDAQABo4IBgjCCAX4wHwYDVR0l
// SIG // BBgwFgYKKwYBBAGCN0wRAQYIKwYBBQUHAwMwHQYDVR0O
// SIG // BBYEFNUXbIMP3Uc+qArjvLCjbK6HZhMPMFQGA1UdEQRN
// SIG // MEukSTBHMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFu
// SIG // ZCBPcGVyYXRpb25zIExpbWl0ZWQxFjAUBgNVBAUTDTIz
// SIG // MTUyMis1MDI1MjEwHwYDVR0jBBgwFoAUSG5k5VAF04Kq
// SIG // Fzc3IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0
// SIG // cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwv
// SIG // TWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBh
// SIG // BggrBgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMv
// SIG // TWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAM
// SIG // BgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQBj
// SIG // RShosExjVPOZfvN7SYQejdgT72k/UwJLhO7lJ4rtVVOm
// SIG // 9f3q3JJl4rlagS4NrBsxOztdtmyvO9XzVqYhK/f6TH5W
// SIG // odTy//tA+lwqHVkuNVJliC0VIUqilEWfonHquZ+BFIin
// SIG // GqQSoWergil0l+tglR5bzb+DeiQOzVM7RNId4wBEHi6B
// SIG // khZXzar5EzqGxOTcJTEUiVoUOkmJ7MIk2NUFNOqUk2j/
// SIG // 3lXnS0ZOqt7f1PYm71cB0/nk8NQEgW2aGTsVgNxY6yvV
// SIG // 4rDk/xqMldsPQ94MyhRjhJQhaUb3HhnkSstjd2EkY44F
// SIG // fVWJVDORv3M+GYoAArZ3eI3xO3m2ypog79lAdSFKcUs0
// SIG // uEwDtW5ADW8Cf3630opFDxn2Utn0UVzFmU3kC+W0wXJl
// SIG // uyDTUyMTNjMRekKpS7ZpCWd4r/XKHMENTM1q63dQVP4q
// SIG // S8IBrW8O5gnrLV2Yz9mphXkI7nALSrfT5BDZ1n1Hsa8E
// SIG // GZ2SVhd5glbyU4egAlNAicjtGtmvkYrsbL0fEKTMNYBN
// SIG // ++OEmzO+ZwAbvOP83ZMX0ZIl66OSLFCfnjVV1ShJbxZ4
// SIG // Ac6W2LU1X9T3XLPMtLBKOhcRkJM8CjSx3tvLRtR9zUx1
// SIG // DWtC0FCkYzKv+fCGr/aquK1tUCM31wBJwQ0gRb9ROLy5
// SIG // sdi4IajET8kwAWbq6wgp9TCCB3owggVioAMCAQICCmEO
// SIG // kNIAAAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNV
// SIG // BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYD
// SIG // VQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
// SIG // Q29ycG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBS
// SIG // b290IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4X
// SIG // DTExMDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9z
// SIG // b2Z0IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJ
// SIG // KoZIhvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t
// SIG // 2G6qghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7d
// SIG // N2vGEtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55J
// SIG // nOloXtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJS
// SIG // JhIv56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64Dhk
// SIG // rG5kNXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ9
// SIG // 7/vjK1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+
// SIG // sYxd6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4
// SIG // ftKdgCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf
// SIG // 8NBSv4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOn
// SIG // qWbsYR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj
// SIG // 43BdD1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8
// SIG // GLhEfEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO
// SIG // 3+xbn6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4
// SIG // X7IvhNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXU
// SIG // pUMvdJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxG
// SIG // oGyY0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3
// SIG // FQEEAwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVt
// SIG // qMp1ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEw
// SIG // CwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYD
// SIG // VR0jBBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYD
// SIG // VR0fBFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2Vy
// SIG // QXV0MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcB
// SIG // AQRSMFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWlj
// SIG // cm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGU
// SIG // MIGRBgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9j
// SIG // cy9wcmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIg
// SIG // HQBMAGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABh
// SIG // AHQAZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOC
// SIG // AgEAZ/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQ
// SIG // wWVfLiw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZdd
// SIG // ZYSQfYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9
// SIG // G6XUtR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKK
// SIG // ELukqQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP
// SIG // 80Yr3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ
// SIG // 1h/DMhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgy
// SIG // cScaf7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6C
// SIG // PxNNZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2
// SIG // l4bf2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1
// SIG // HxS+YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9
// SIG // WfOXpQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpI
// SIG // lR+r+0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h1
// SIG // 5q/6/IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BX
// SIG // IqF4ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3Zb
// SIG // CoBIa/15n8G9bW1qyVJzEw16UM0xghomMIIaIgIBATCB
// SIG // lTB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9N
// SIG // aWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMz
// SIG // AAAD87lqZLvv9+1jAAAAAAPzMA0GCWCGSAFlAwQCAQUA
// SIG // oIGuMBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwG
// SIG // CisGAQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqG
// SIG // SIb3DQEJBDEiBCDufdRynXdr30zVCQkDA1zoHLZS/kTk
// SIG // 7WgfET2IMeJQ9TBCBgorBgEEAYI3AgEMMTQwMqAUgBIA
// SIG // TQBpAGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5t
// SIG // aWNyb3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBADyt
// SIG // vfTfzjUfvZBgundwhISOaKBV4UclVWb+DdEVi0m/245F
// SIG // DYEfXjI52Ivxu0KlIK0rWqLvl1vZ6a2kneGbVqArJEnl
// SIG // d6EKoozzQ37S5QJY49tP0DpwpiLpNQwiVdF5l7h9f0jZ
// SIG // a43lmGafwwWvATfHyntsc8s+FZg3ZUKB2La3P/y2qgap
// SIG // 5mGwWyzEmZOo8X6+3Df/75ma4SuXB+Uwo7GFyaKdA+1m
// SIG // 5/8/fZ7sSc9KxjuEQSNiCqQ9JmdqczXWWILIbDWuLR3G
// SIG // jjQ2YaluFdmKk++1Z/EJJviuZmltTChOcIsKAa6B9vYT
// SIG // 1svXmDCdWk/rTLSIquA6yo1ofKkKQ1OhghewMIIXrAYK
// SIG // KwYBBAGCNwMDATGCF5wwgheYBgkqhkiG9w0BBwKggheJ
// SIG // MIIXhQIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBWgYLKoZI
// SIG // hvcNAQkQAQSgggFJBIIBRTCCAUECAQEGCisGAQQBhFkK
// SIG // AwEwMTANBglghkgBZQMEAgEFAAQgB5SKb3MeDSeG4NJA
// SIG // 7zUq1Y3c8j+YT9ygUcf5aMHB/lkCBme2NZLTEBgTMjAy
// SIG // NTA0MDExOTU5MjIuNzIzWjAEgAIB9KCB2aSB1jCB0zEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9z
// SIG // b2Z0IElyZWxhbmQgT3BlcmF0aW9ucyBMaW1pdGVkMScw
// SIG // JQYDVQQLEx5uU2hpZWxkIFRTUyBFU046NDAxQS0wNUUw
// SIG // LUQ5NDcxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0
// SIG // YW1wIFNlcnZpY2WgghH+MIIHKDCCBRCgAwIBAgITMwAA
// SIG // Af7QqMJ7NCELAQABAAAB/jANBgkqhkiG9w0BAQsFADB8
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNy
// SIG // b3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDAeFw0yNDA3
// SIG // MjUxODMxMThaFw0yNTEwMjIxODMxMThaMIHTMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQg
// SIG // SXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjo0MDFBLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC
// SIG // AgoCggIBALy8IRcVpagON6JbBODwnoGeJkn7B9mE0ihG
// SIG // L/Bp99+tgZmsnHX+U97UMaT9zVputmB1IniEF8PtLuKp
// SIG // WsuADdyKJyPuOzaYvX6OdsXQFzF9KRq3NHqlvEVjd238
// SIG // 1zyr9OztfIth4w8i7ssGMigPRZlm3j42oX/TMHfEIMoJ
// SIG // D7cA61UBi8jpMjN1U4hyqoRrvQQhlUXR1vZZjzK61JT1
// SIG // omFfS1QgeVWHfgBFLXX6gHapc1cQOdxIMUqoaeiW3xCp
// SIG // 03XHz+k/DIq9B68E07VdodsgwbY120CGqsnCjm+t9xn0
// SIG // ZJ9teizgwYN+z/8cIaHV0/NWQtmhze3sRA5pm4lrLIxr
// SIG // xSZJYtoOnbdNXkoTohpoW6J69Kl13AXqjW+kKBfI1/7g
// SIG // 1bWPaby+I/GhFkuPYSlB9Js7ArnCK8FEvsfDLk9Ln+1V
// SIG // whTRW4glDUU6H8SdweOeHhiYS9H8FE0W4Mgm6S4CjCg4
// SIG // gkbm+uQ4Wng71AACU/dykgqHhQqJJT2r24EMmoRmQy/7
// SIG // 1gFY1+W/Cc4ZcvYBgnSv6ouovnMWdEvMegdsoz22X3QV
// SIG // Xx/zQaf9S5+8W3jhEwDp+zk/Q91BrdKvioloGONh5y48
// SIG // oZdWwLuR34K8gDtwwmiHVdrY75CWstqjpxew4I/GutCk
// SIG // E/UIHyX8F5692Som2DI2lGwjSA58c9spAgMBAAGjggFJ
// SIG // MIIBRTAdBgNVHQ4EFgQUb857ifUlNoOZf+f2/uQgYm2x
// SIG // xd0wHwYDVR0jBBgwFoAUn6cVXQBeYl2D9OXSZacbUzUZ
// SIG // 6XIwXwYDVR0fBFgwVjBUoFKgUIZOaHR0cDovL3d3dy5t
// SIG // aWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWljcm9zb2Z0
// SIG // JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAoMSkuY3Js
// SIG // MGwGCCsGAQUFBwEBBGAwXjBcBggrBgEFBQcwAoZQaHR0
// SIG // cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jZXJ0
// SIG // cy9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIw
// SIG // MjAxMCgxKS5jcnQwDAYDVR0TAQH/BAIwADAWBgNVHSUB
// SIG // Af8EDDAKBggrBgEFBQcDCDAOBgNVHQ8BAf8EBAMCB4Aw
// SIG // DQYJKoZIhvcNAQELBQADggIBAIk+DVLztpcPtHQzLbAb
// SIG // sZl9qN5VUKp0JLiEwBiBgoCPrJe2amTkw3fC6sbB+Blg
// SIG // j087XN7a/AIAb7GCM1oxcIqAowkDg6taATFjcxLCs3JB
// SIG // 8QM2KOUs3uzj5DANwwMVauEkkfMvk0QthnDndCUXmdZT
// SIG // 5YZT5fVyPs/DoLTj5kJyy4j/as6Ux8Bc3vrG6kp/HHpH
// SIG // bjGXS8hyZNzYsNwJ4JVP1k8xrEAHXIfUlVeCx4n1J5sE
// SIG // 39ItO4irU5TZKt28dYsloOze4xmQAUVk9pl/mAFR5Stu
// SIG // 7fZ/lrWG5+nDiTV+i7B/MT1QUWACEVZFrDMhAHaD/Xan
// SIG // 2mc8Fxpo7lUPd9TYcx44xvhH8NdfA145N1at6lCNa3t+
// SIG // MzDE0c2WRMPNhbqRd74lzUdw1TpUvSR+MeXpnyDWtbrk
// SIG // mnOheAniQg9RmpH0uw+WsjbGmdnvrAVIetilU5YRLEER
// SIG // 2UcAk8W4sdWOIicPjwzS3NB39fal9l4l9LtkjPQlk047
// SIG // M/UrwoyCksQmRQjb/86SiJbB8e4UDUB0jGyodP8MJ/Or
// SIG // oiACxI2s1LMxNPl+q3Dmw31OIfzv9L5mxdwTEfuOawGT
// SIG // ABEybEQz8RyQqP+VxoVnYPy6CeV1gazgy+OGDazexUZx
// SIG // xAAK9OrH5amfHnldxbgynT+YdfVlJxlsDtR/2Y1MzqFR
// SIG // old4MIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJmQAA
// SIG // AAAAFTANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3Qg
// SIG // Q2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTAwHhcNMjEw
// SIG // OTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1WjB8MQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQg
// SIG // VGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcN
// SIG // AQEBBQADggIPADCCAgoCggIBAOThpkzntHIhC3miy9ck
// SIG // eb0O1YLT/e6cBwfSqWxOdcjKNVf2AX9sSuDivbk+F2Az
// SIG // /1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhg
// SIG // fWpSg0S3po5GawcU88V29YZQ3MFEyHFcUTE3oAo4bo3t
// SIG // 1w/YJlN8OWECesSq/XJprx2rrPY2vjUmZNqYO7oaezOt
// SIG // gFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/dvI2k
// SIG // 45GPsjksUZzpcGkNyjYtcI4xyDUoveO0hyTD4MmPfrVU
// SIG // j9z6BVWYbWg7mka97aSueik3rMvrg0XnRm7KMtXAhjBc
// SIG // TyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKRHh09/SDP
// SIG // c31BmkZ1zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrb
// SIG // qn427DZM9ituqBJR6L8FA6PRc6ZNN3SUHDSCD/AQ8rdH
// SIG // GO2n6Jl8P0zbr17C89XYcz1DTsEzOUyOArxCaC4Q6oRR
// SIG // RuLRvWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12Nv
// SIG // DMk2ZItboKaDIV1fMHSRlJTYuVD5C4lh8zYGNRiER9vc
// SIG // G9H9stQcxWv2XFJRXRLbJbqvUAV6bMURHXLvjflSxIUX
// SIG // k8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q
// SIG // 4i6tAgMBAAGjggHdMIIB2TASBgkrBgEEAYI3FQEEBQID
// SIG // AQABMCMGCSsGAQQBgjcVAgQWBBQqp1L+ZMSavoKRPEY1
// SIG // Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacb
// SIG // UzUZ6XIwXAYDVR0gBFUwUzBRBgwrBgEEAYI3TIN9AQEw
// SIG // QTA/BggrBgEFBQcCARYzaHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnkuaHRt
// SIG // MBMGA1UdJQQMMAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcU
// SIG // AgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjAPBgNV
// SIG // HRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2VsuP6KJc
// SIG // YmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0
// SIG // dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3By
// SIG // b2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNy
// SIG // bDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0MA0GCSqG
// SIG // SIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8
// SIG // qW/qXBS2Pk5HZHixBpOXPTEztTnXwnE2P9pkbHzQdTlt
// SIG // uw8x5MKP+2zRoZQYIu7pZmc6U03dmLq2HnjYNi6cqYJW
// SIG // AAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVt
// SIG // I1TkeFN1JFe53Z/zjj3G82jfZfakVqr3lbYoVSfQJL1A
// SIG // oL8ZthISEV09J+BAljis9/kpicO8F7BUhUKz/AyeixmJ
// SIG // 5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTpkbKp
// SIG // W99Jo3QMvOyRgNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7G
// SIG // dP32THJvEKt1MMU0sHrYUP4KWN1APMdUbZ1jdEgssU5H
// SIG // LcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138eW0QBjloZ
// SIG // kWsNn6Qo3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5P
// SIG // ndLQTHa1V1QJsWkBRH58oWFsc/4Ku+xBZj1p/cvBQUl+
// SIG // fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7Fx0ViY1w/ue1
// SIG // 0CgaiQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAn
// SIG // Qj0llOZ0dFtq0Z4+7X6gMTN9vMvpe784cETRkPHIqzqK
// SIG // Oghif9lwY1NNje6CbaUFEMFxBmoQtB1VM1izoXBm8qGC
// SIG // A1kwggJBAgEBMIIBAaGB2aSB1jCB0zELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxh
// SIG // bmQgT3BlcmF0aW9ucyBMaW1pdGVkMScwJQYDVQQLEx5u
// SIG // U2hpZWxkIFRTUyBFU046NDAxQS0wNUUwLUQ5NDcxJTAj
// SIG // BgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZp
// SIG // Y2WiIwoBATAHBgUrDgMCGgMVAIRjRw/2u0NG0C1lRvSb
// SIG // hsYC0V7HoIGDMIGApH4wfDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // UENBIDIwMTAwDQYJKoZIhvcNAQELBQACBQDrlr5JMCIY
// SIG // DzIwMjUwNDAxMTkzNDMzWhgPMjAyNTA0MDIxOTM0MzNa
// SIG // MHcwPQYKKwYBBAGEWQoEATEvMC0wCgIFAOuWvkkCAQAw
// SIG // CgIBAAICCA0CAf8wBwIBAAICErMwCgIFAOuYD8kCAQAw
// SIG // NgYKKwYBBAGEWQoEAjEoMCYwDAYKKwYBBAGEWQoDAqAK
// SIG // MAgCAQACAwehIKEKMAgCAQACAwGGoDANBgkqhkiG9w0B
// SIG // AQsFAAOCAQEAhYWGY+ok49q3up2IN8kH+wU/tPWRS9FY
// SIG // c3IOQVnAfLSRRKyW5Z58QJN9blnk/DSYTvK90y2Karw8
// SIG // tREpktzL77VqyfjFTwMdSrg2h99N2vVlc/bZ46UdVUjy
// SIG // pweqgJMKkLaCH/lt9Agp5mRZrGGLNZiBu4rwKcTFlx07
// SIG // diEjo1gXF+dmtuKsIk/unV64bDeT6S+ZsCfSPRSRe4jD
// SIG // BkTU9Flv72QDCNb+UXIrpm+B1yWOAIA14LYY42QMsxJw
// SIG // YZYbt3j757YGHYgPzmAsgj1Xy049XrBmpzOi8/6MsT/y
// SIG // LF8tx3/URFuw8svUaxFI2ADnzkQx+BVq4TkB6fj6PFnb
// SIG // WjGCBA0wggQJAgEBMIGTMHwxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1w
// SIG // IFBDQSAyMDEwAhMzAAAB/tCowns0IQsBAAEAAAH+MA0G
// SIG // CWCGSAFlAwQCAQUAoIIBSjAaBgkqhkiG9w0BCQMxDQYL
// SIG // KoZIhvcNAQkQAQQwLwYJKoZIhvcNAQkEMSIEIGhhkpSh
// SIG // /jX+K4wu2wuTz+nqRXajd8hZKJXnZHS0MB/WMIH6Bgsq
// SIG // hkiG9w0BCRACLzGB6jCB5zCB5DCBvQQgEYXM3fxTyJ8Y
// SIG // 0fdptoT1qnPrxjhtfvyNFrZArLcodHkwgZgwgYCkfjB8
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNy
// SIG // b3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMAITMwAAAf7Q
// SIG // qMJ7NCELAQABAAAB/jAiBCAM1nAcLZ88HrpTLG6F3AFf
// SIG // 5h0b0iBGykqG0nBFa4egUDANBgkqhkiG9w0BAQsFAASC
// SIG // AgAefF2q5zks1BwsEJXAhmEq2iw1tFwdu212O+gyRJpk
// SIG // /PYIeG0ZcIzp/7eeeEmSn6UH7x3SIt6nCtXjtH+xOIMA
// SIG // eLm6H+w2s4/Q9d+8NC9UlGMnJsOwLYA202zj9Hm+5Isl
// SIG // Hq/KXu45QK41ntzWNvEKlF7Z+cVOxkKjdBFhbir1Zb43
// SIG // BItcKGP69PwfycFVutleyiphd6wmZyZ6AFSmh9HtnbHQ
// SIG // 9IhZfZR0rN+X2dvuvlqRpgiarl684KxUb3AWgk385hx/
// SIG // k71+Dgw3IVCZkFwHy3p9NEzHDUphd9VBfeQwaRucE13d
// SIG // Nd0FQQg+VbGtWcZcypowVk8+GtgfsVwx1Q1K/swWRlr4
// SIG // F+kYBMoxe9hHqoUkOVX5MSsi6NOEIBnyralvg9m/EH5R
// SIG // P7EC7GiMKYecuk3lk7X1+BbahcmajZdx7o/qgpJGWJYq
// SIG // t6F5ZcjB7XGEL9aFgqwQD5HE1G9LFtUrA7pgXqSXRPqs
// SIG // lACXwvbxgicqJC2426tHyEoO/8jWLXspqSn8Z3b6Slln
// SIG // yAWHVo6RkFajJ1XK601iik6gNNN3u8XL8OV8mzhVyX6L
// SIG // EohNtgY9Q47nsz9UK02ePemS89BBDCReCF92pBe/eMgo
// SIG // I+Xzf6rO9gFyEbzue51RG9Nry6wjXIItr21XwC2GaXRh
// SIG // srIXBlORKAc61Pb1FRJOQSbYHQ==
// SIG // End signature block
