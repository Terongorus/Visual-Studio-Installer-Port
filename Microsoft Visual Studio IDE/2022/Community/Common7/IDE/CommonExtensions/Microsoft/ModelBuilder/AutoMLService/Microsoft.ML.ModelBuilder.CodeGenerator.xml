<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ML.ModelBuilder.CodeGenerator</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.ConsumptionGenerator">
            <summary>
            code generator for *.train.cs.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.ConsumptionGenerator.Option.ClassName">
            <summary>
            Gets or sets mlnet class name.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.CSharp.NotebookCSFileGenerator.Option.ModelName">
            <summary>
            Gets or sets mlnet model name (or path?).
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.CSharp.NotebookRegressionGraphGenerator.Option.ModelName">
            <summary>
            Gets or sets mlnet model name (or path?).
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.CSharp.ProjectGenerator.ForecastingConsoleAppGenerator.#ctor(Microsoft.ML.ModelBuilder.Configuration.ITrainingConfiguration,Microsoft.ML.ModelBuilder.Configuration.ITrial,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.ModelBuilder.CodeGenerator.CSharp.ProjectGenerator.ForecastingConsoleAppGenerator"/> class.
            </summary>
            <param name="configuration">training configuration.</param>
            <param name="clazzName">class name, this will be sanitized if not convey csharp syntax.</param>
            <param name="modelPath">full path to model file.</param>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.PipelineGenerator">
            <summary>
            code generator for *.Training.cs.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.PipelineGenerator.Option.ClassName">
            <summary>
            Gets or sets file name.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.DisplayStringExtension.ToDisplayString(System.Object,Microsoft.ML.Data.NumberDataViewType)">
            <summary>
            return display string if <paramref name="dataType"/> is double, single or int32,
            otherwise return null.
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationConsoleProgramDev17Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageClassificationModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippet">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippet.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureImageConsumeCodeSnippetBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.AzureObjectDetectionConsoleProgramDev17Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.BinaryClassificationModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsproj">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsproj.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleCsprojBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsoleProgramDev17Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippet">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippet.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumeCodeSnippetBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Consumption">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Consumption.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ConsumptionBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Evaluate">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Evaluate.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.EvaluateBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsoleProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippet">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippet.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumeCodeSnippetBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumption">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumption.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ForecastingConsumptionBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsoleProgramDev17Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippet">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippet.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalImageClassificationConsumeCodeSnippetBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev16Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsoleProgramDev17Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippet">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippet.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.LocalObjectDetectionConsumeCodeSnippetBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ModelInputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.MultiClassClassificationModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidation">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidation.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.BinaryClassCrossValidationBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidation">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidation.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.ModelCrossValidationBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidation">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidation.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.MultiClassCrossValidationBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidation">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidation.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.CrossValidation.RegressionCrossValidationBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCell">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCell.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Forecasting.ConsumeModelCellBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCell">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCell.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ConsumeModelCellBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCell">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCell.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ImageClassificaiton.ModelInputOutputCellBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCell">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCell.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.InstallNugetDependencyCellBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDown">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDown.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.RegressionMarkDownBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDown">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDown.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.MarkDowns.TrainingMarkDownBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemas">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemas.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ModelInputOutputSchemasBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackage">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackage.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.NugetPackageBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImage">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImage.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.InputImageBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphics">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphics.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODGraphicsBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCorners">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCorners.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODImageCornersBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipeline">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipeline.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODLibraryClassForOnnxPipelineBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugets">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugets.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODNugetsBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPen">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPen.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODPenBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsings">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsings.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipeline">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipeline.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.ODUsingsPipelineBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImage">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImage.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetectionImageOutput.OutputImageBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCell">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCell.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.ObjectDetection.ConsumeModelCellBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplay">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplay.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.RowsDisplayBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebook">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebook.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingNotebookBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewData">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewData.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.TrainingViewDataBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Usings">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.Usings.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlot">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlot.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.UsingsXPlotBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.Histogram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.Histogram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.HistogramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBar">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBar.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFiBarBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculator">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculator.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.PFICalculatorBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.Scatter">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.Scatter.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatterBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLine">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLine.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Notebooks.XplotGraph.ScatteringLineBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.ObjectDetectionModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RecommendationModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutput">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutput.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.RegressionModelOutputBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Training">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.Training.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.TrainingBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsproj">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsproj.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiCsprojBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgram">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgram.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.CSharp.WebApiProgramDev16Base.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChart">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChart.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.ML.ModelBuilder.CodeGenerator.Template.Html.StringLabelLineChartBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Utils.GenerateColumnAttribution(Microsoft.ML.ModelBuilder.CodeGenerator.Contract.Column)">
            <summary>
            generate column attribution for ModelInput class.
            </summary>
            <param name="column">column.</param>
            <returns>attribution code.</returns>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Utils.GenerateColumnProperty(Microsoft.ML.ModelBuilder.CodeGenerator.Contract.Column)">
            <summary>
            generate column property code for ModelInput class.
            </summary>
            <param name="column">column.</param>
            <returns>property code.</returns>
        </member>
        <member name="M:Microsoft.ML.ModelBuilder.CodeGenerator.Utils.Sanitize(System.String)">
            <summary>
            sanitize name to code, if <paramref name="name"/> contains chars other than letter or number, replace them with underscore. If the first letter is low-case, make it upper-case. Otherwise, if the first letter is number, put a underscore before it.
            </summary>
            <param name="name">name.</param>
            <returns>sanitized name.</returns>
        </member>
    </members>
</doc>
