<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BenchmarkAriaLabel" xml:space="preserve">
    <value>Benchmarks</value>
    <comment>The name announced by screen reader tools when the main tree is selected in the UI</comment>
  </data>
  <data name="BenchmarkHeaderName" xml:space="preserve">
    <value>Name</value>
    <comment>The header for the 'Name' column in the tree. This column will contain the method name for identified benchmarks</comment>
  </data>
  <data name="BenchmarkHeaderStartTime" xml:space="preserve">
    <value>Start Time </value>
    <comment>The header for the 'Start Time' column in the tree. This column will contain the starting time for the benchmark</comment>
  </data>
  <data name="BenchmarkHeaderStopTime" xml:space="preserve">
    <value>End Time</value>
    <comment>The header for the 'End Time' column in the tree. This column will contain the ending time for the benchmark</comment>
  </data>
  <data name="BenchmarkHeaderMean" xml:space="preserve">
    <value>Mean</value>
    <comment>The header for the 'Mean' column in the tree. This column will contain the mean value for the benchmark</comment>
  </data>
  <data name="BenchmarkHeaderError" xml:space="preserve">
    <value>Error</value>
    <comment>The header for the 'Error' column in the tree. This column will contain the error value for the benchmark</comment>
  </data>
  <data name="BenchmarkHeaderStdDev" xml:space="preserve">
    <value>Standard Deviation</value>
    <comment>The header for the 'StdDev' column in the tree. This column will contain the standard deviation value for the benchmark</comment>
  </data>
  <data name="BenchmarkHeaderNum" xml:space="preserve">
    <value>Number of iterations</value>
    <comment>The header for the 'N' column in the tree. This column will contain the number of iterations for the benchmark</comment>
  </data>
  <data name="LoadingDataMessage" xml:space="preserve">
    <value>Loading data...</value>
    <comment>The message displayed in the UI while the model is processing data</comment>
  </data>
  <data name="NoDataMessage" xml:space="preserve">
    <value>No benchmarks</value>
    <comment>The message displayed in the UI when there are 0 benchmarks to display within the chosen timespan</comment>
  </data>
  <data name="ContextMenu_Copy" xml:space="preserve">
    <value>Copy</value>
    <comment>The label shown in a context menu for the 'Copy' command which will copy the selected row as text to the clipboard</comment>
  </data>
  <data name="ContextMenu_Select" xml:space="preserve">
    <value>Select time range</value>
    <comment>The label shown in a context menu for the 'Select time range' command which will select the time range for the selected row</comment>
  </data>
  <data name="ContextMenu_GoToSourceFile" xml:space="preserve">
    <value>Go To Source File</value>
    <comment>The label shown in a context menu for the 'Show source file' command which will open up the source file in VS for the selected row</comment>
  </data>
  <data name="ContextMenu_CopyAsMarkdown" xml:space="preserve">
    <value>Copy as Markdown</value>
    <comment>Context menu item for copying the selected text to the clipboard as Markdown</comment>
  </data>
  <data name="Overlay_ProgressIndeterminateAriaLabel" xml:space="preserve">
    <value>Loading data...</value>
    <comment>Aria label for indeterminate progress bar in BenchmarkDotNet tool after data collection</comment>
  </data>
</root>