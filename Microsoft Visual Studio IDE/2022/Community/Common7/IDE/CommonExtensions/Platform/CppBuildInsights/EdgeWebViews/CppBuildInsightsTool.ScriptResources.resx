<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoCompleteLists" xml:space="preserve">
    <value>Auto Complete Lists</value>
  </data>
  <data name="Build_Label" xml:space="preserve">
    <value>Build: {0} seconds</value>
  </data>
  <data name="Build_Tootip" xml:space="preserve">
    <value>Build time</value>
  </data>
  <data name="Button_Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Button_ArialLabel_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Button_OpenInWPA" xml:space="preserve">
    <value>Open in WPA</value>
  </data>
  <data name="Button_OpenInWPA_ToolTip" xml:space="preserve">
    <value>Click to open trace in WPA</value>
  </data>
  <data name="Button_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ContextMenu_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ContextMenu_CopyAsMarkdown" xml:space="preserve">
    <value>Copy as Markdown</value>
  </data>
  <data name="ContextMenu_GoToFile" xml:space="preserve">
    <value>Go To File</value>
  </data>
  <data name="ContextMenu_GoToInstantiationFile" xml:space="preserve">
    <value>Go To Template Instantiation File</value>
  </data>
  <data name="ContextMenu_GoToTranslationUnitFile" xml:space="preserve">
    <value>Go to Translation Unit File</value>
  </data>
  <data name="ContextMenu_ShowInIncludedFiles" xml:space="preserve">
    <value>Show in Included Files View</value>
  </data>
  <data name="ContextMenu_ShowInIncludeTree" xml:space="preserve">
    <value>Show In Include Tree View</value>
  </data>
  <data name="DiagnosticsSession_Label" xml:space="preserve">
    <value>Diagnostics Session: {0} seconds</value>
  </data>
  <data name="DiagnosticsSession_Tooltip" xml:space="preserve">
    <value>Diagnostics session wall clock time</value>
  </data>
  <data name="FilesFilterWatermark" xml:space="preserve">
    <value>Filter Files</value>
  </data>
  <data name="FilesTableAriaLabel" xml:space="preserve">
    <value>Table with file parsing statistics</value>
  </data>
  <data name="FilterAriaLabel" xml:space="preserve">
    <value>Filter Files</value>
  </data>
  <data name="FilterButton" xml:space="preserve">
    <value>Filter column</value>
  </data>
  <data name="Filter_Tooltip" xml:space="preserve">
    <value>Filter files</value>
  </data>
  <data name="FunctionsFilterWatermark" xml:space="preserve">
    <value>Filter Functions</value>
  </data>
  <data name="FunctionsTableAriaLabel" xml:space="preserve">
    <value>Table with Function statistics</value>
  </data>
  <data name="Header_Component" xml:space="preserve">
    <value>Translation Unit</value>
  </data>
  <data name="Header_Component_ToolTip" xml:space="preserve">
    <value>Path of source file that is input to the compiler</value>
  </data>
  <data name="Header_Contribution" xml:space="preserve">
    <value>Contribution [sec, %]</value>
  </data>
  <data name="Header_WallTimeResponsibility" xml:space="preserve">
    <value>Wall Time Responsibility [sec, %]</value>
  </data>
  <data name="Header_WallTimeResponsibility_ToolTip" xml:space="preserve">
    <value>This represents the contribution to the total wall clock time during the build process, accounting for parallelism in multi-threaded builds.</value>
  </data>
  <data name="Header_FilePath" xml:space="preserve">
    <value>File Path</value>
  </data>
  <data name="Header_ForceinlineSize" xml:space="preserve">
    <value>Forceinline Size</value>
  </data>
  <data name="Header_ForceinlineSize_ToolTip" xml:space="preserve">
    <value>The size of the force-inlined function, represented as an intermediate instruction count.</value>
  </data>
  <data name="Header_FunctionName" xml:space="preserve">
    <value>Function Name</value>
  </data>
  <data name="Header_IncludedFilesCount" xml:space="preserve">
    <value>Included Files Count</value>
  </data>
  <data name="Header_IncludedFilesCount_ToolTip" xml:space="preserve">
    <value>Number of headers included by this file</value>
  </data>
  <data name="Header_InstantiationCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Header_InstantiationFilePath" xml:space="preserve">
    <value>Instantiation File Path</value>
  </data>
  <data name="Header_IncludedByCount" xml:space="preserve">
    <value>Included by Count</value>
  </data>
  <data name="Header_IncludedByCount_ToolTip" xml:space="preserve">
    <value>Number of times this file was included by another file</value>
  </data>
  <data name="Header_Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Header_SpecializationName" xml:space="preserve">
    <value>Specialization Name</value>
  </data>
  <data name="Header_TemplateName" xml:space="preserve">
    <value>Template Name</value>
  </data>
  <data name="Header_Time" xml:space="preserve">
    <value>Time [sec, %]</value>
  </data>
  <data name="LoadingDataMessage" xml:space="preserve">
    <value>Loading data ... </value>
  </data>
  <data name="MetricsAndPercent" xml:space="preserve">
    <value>{0} ({1})</value>
    <comment>{0} is the unit accounted for (i.e. sample count or time in ms) and {1} is the percentage of total usage</comment>
  </data>
  <data name="NoDataMessage" xml:space="preserve">
    <value>No data available. Build events with negligible impact are discarded to avoid performance degradation.</value>
  </data>
  <data name="NoDataMessageTemplatesView" xml:space="preserve">
    <value>No data available. Either the build events with negligible impact were discarded to avoid performance degradation, or the trace was collected with template instantiation collection off.</value>
  </data>
  <data name="Overlay_ProgressIndeterminateAriaLabel" xml:space="preserve">
    <value>Loading data...</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(Select All)</value>
  </data>
  <data name="TemplatesFilterWatermark" xml:space="preserve">
    <value>Filter Templates</value>
  </data>
  <data name="TemplatesTableAriaLabel" xml:space="preserve">
    <value>Table with file parsing statistics</value>
  </data>
  <data name="Tooltip_Build_Contribution_Header" xml:space="preserve">
    <value>Time contributing to the total build time when parallelism is taken into account. Alternatively called Wall Clock Time Responsibility.</value>
  </data>
  <data name="TopFilesAriaLabel" xml:space="preserve">
    <value>Top Files</value>
  </data>
  <data name="TopFunctionsAriaLabel" xml:space="preserve">
    <value>Top Functions</value>
  </data>
  <data name="UnableShowDataMessage" xml:space="preserve">
    <value>Unable to show data</value>
  </data>
  <data name="VerticalSplitterAriaLabel" xml:space="preserve">
    <value>Splitter</value>
  </data>
  <data name="Header_Duration" xml:space="preserve">
    <value>Duration [sec]</value>
  </data>
  <data name="Header_Duration_ToolTip" xml:space="preserve">
    <value>The aggregated duration of all the threads</value>
  </data>
  <data name="Header_ExclusiveDuration" xml:space="preserve">
    <value>Exclusive Duration [sec]</value>
  </data>
  <data name="Header_ExclusiveDuration_ToolTip" xml:space="preserve">
    <value>Parsing duration of the file excluding duration for all headers included</value>
  </data>
  <data name="Header_InclusiveDuration" xml:space="preserve">
    <value>Inclusive Duration [sec]</value>
  </data>
  <data name="Header_InclusiveDuration_ToolTip" xml:space="preserve">
    <value>Parsing duration of the file including duration for all headers included</value>
  </data>
  <data name="Value_LocalizedDecimal" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="Header_ComponentFileName" xml:space="preserve">
    <value>Translation Unit Name</value>
  </data>
  <data name="Header_ComponentFileName_ToolTip" xml:space="preserve">
    <value>Name of source file that is input to the compiler</value>
  </data>
  <data name="Header_ComponentRelativePath" xml:space="preserve">
    <value>Translation Unit Relative Path</value>
  </data>
  <data name="Header_ComponentRelativePath_ToolTip" xml:space="preserve">
    <value>Relative path to Solution of the source file that is input to the compiler</value>
  </data>
  <data name="Header_FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="Header_RelativeFilePath" xml:space="preserve">
    <value>Relative File Path</value>
  </data>
  <data name="Header_InstantiationFileName" xml:space="preserve">
    <value>Instantiation File Name</value>
  </data>
  <data name="Header_InstantiationRelativeFilePath" xml:space="preserve">
    <value>Instantiation Relative File Path</value>
  </data>
  <data name="LearningAid_IncludedFiles" xml:space="preserve">
    <value>Use this view to identify the headers that are most frequently included and decide what to include in a pre-compiled header (PCH). </value>
  </data>
  <data name="LearningAidHtml_Include" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2289348</value>
  </data>
  <data name="LearningAid_Functions" xml:space="preserve">
    <value>Use this view to identify functions with long code generation times and force-inlining issues. </value>
  </data>
  <data name="LearningAid_Templates" xml:space="preserve">
    <value>Use this view to identify template instantiations. </value>
  </data>
  <data name="LearningAidHtml_Functions" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2289441</value>
  </data>
  <data name="LearningAid_IncludeTree" xml:space="preserve">
    <value>Use this view to identify #include dependencies and visualize inclusion chains. </value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="WarningIconAriaLabel" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="QuestionMarkIconAriaLabel" xml:space="preserve">
    <value>Question mark icon</value>
  </data>
  <data name="DocumentationLinkAriaLabel" xml:space="preserve">
    <value>Documentation Link</value>
  </data>
  <data name="FilesToInclude" xml:space="preserve">
    <value>files to include</value>
  </data>
  <data name="FilesToExclude" xml:space="preserve">
    <value>files to exclude</value>
  </data>
  <data name="FilesToExcludeAriaLabel" xml:space="preserve">
    <value>files to exclude e.g. *.cpp, src/**/exclude</value>
  </data>
  <data name="FilesToIncludeAriaLabel" xml:space="preserve">
    <value>files to include e.g. *.cpp, src/**/include</value>
  </data>
</root>