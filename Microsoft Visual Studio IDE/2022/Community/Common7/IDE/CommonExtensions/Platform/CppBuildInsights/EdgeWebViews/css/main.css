html, body {
    height: 100%;
    width: 100%;
    cursor: default;
    -ms-high-contrast-adjust: none;
}

#plugin-contextmenu-container {
    /**
     * This puts the plugin context menu element behind all of our view
     * so that it does not intercept any events. This element is only used
     * to generate HTML passed to the context menu ScriptedSandbox instance
     * and is never shown on this DOM.
     */
    z-index: -1;
}

body {
    margin: 0px;
    padding: 0px;
    font-family: var(--plugin-font-family, "Segoe Script"), Arial, sans-serif;
    font-size: var(--plugin-font-size, 12px);
    color: var(--plugin-color, rgb(0, 0, 0));
    display: grid;
    grid-template-rows: auto auto 1fr;
    grid-template-columns: 1fr;
}

.icon {
    width: 1.34em;
    height: 1.34em;
    display: inline-block;
}

    .icon svg {
        width: auto;
        height: 100%;
        vertical-align: baseline;
    }

.learningAid {
    grid-row: 2;
    grid-column: 1;
    position: relative;
    height: 100%;
    padding-block: 3px;
    margin-left: 6px;
    display: block;
}

.learningAidIcon {
    width: 16px;
    height: 16px;
    vertical-align: bottom;
}

.mainArea {
    grid-row: 3;
    grid-column: 1;
    position: relative;
    display: flex;
    flex-direction: row;
    overflow: hidden;
    height: 100%;
}

#TreeGrid {
    flex: 1 1 auto;
    overflow: hidden;
}

.treeGridContainer {
    width: 100%;
    height: 100%;
}

td > .hotHighlight.hotItem {
    width: 1.4em;
    height: 1.4em;
    vertical-align: middle;
    background-size: 100%;
}

th {
    text-align: left !important;
}


/** No data overlay */
#message-overlay {
    grid-row: 3;
    grid-column: 1;
    position: relative;
    overflow: hidden;
    z-index: 10000;
    transition: opacity .25s, height 0s;
    background-color: var(--plugin-background-color, rgba(200, 200, 200, 0.50));
}

    #message-overlay.hide {
        height: 0;
        opacity: 0;
        transition: opacity .25s, height 0 .25s;
    }

    #message-overlay > div {
        width: 100%;
        display: block;
        position: absolute;
        top: 30%;
        text-align: center;
    }

    #message-overlay span {
        display: block;
        background-color: var(--plugin-background-color, rgba(200, 200, 200, 0.50));
    }

    #message-overlay progress {
        display: block;
        margin: 5px auto;
        color: var(--ProgressBar-IndicatorFill-Background, fuchsia);
        background-color: var(--ProgressBar-Background-Background, red);
    }

.container {
    position: relative;
}

td > .hotHighlight {
    display: inline-block;
    width: 0px;
    height: 0px;
}

.checkboxLabel {
    color: var(--CommonControls-CheckBoxText-Background, fuchsia)
}

    .checkboxLabel:hover {
        color: var(--CommonControls-CheckBoxTextHover-Background, fuchsia);
    }

    .checkboxLabel:active {
        color: var(--CommonControls-CheckBoxTextPressed-Background, fuchsia);
    }

    .checkboxLabel:focus {
        color: var(--CommonControls-CheckBoxTextFocused-Background, fuchsia);
    }

    .checkboxLabel:disabled {
        color: var(--CommonControls-CheckBoxTextDisabled-Background, fuchsia);
    }

input[type=checkbox] {
    outline: none;
}

    input[type=checkbox]:checked {
        color: var(--CommonControls-CheckBoxGlyph-Background, fuchsia);
        background-color: var(--CommonControls-CheckBoxBackground-Background, aquamarine);
        border: 1px solid var(--CommonControls-CheckBoxBorder-Background, red);
    }

    input[type=checkbox]:active:checked {
        color: var(--CommonControls-CheckBoxGlyphPressed-Background, fuchsia);
        border-color: var(--CommonControls-CheckBoxBorderPressed-Background, red);
        background-color: var(--CommonControls-CheckBoxBackgroundPressed-Background, red);
    }

    input[type=checkbox]:focus:checked {
        color: var(--CommonControls-CheckBoxGlyphFocused-Background, fuchsia);
        border-color: var(--CommonControls-CheckBoxBorderFocused-Background, red);
        background-color: var(--CommonControls-CheckBoxBackgroundFocused-Background, red);
    }

    input[type=checkbox]:disabled:checked {
        color: var(--CommonControls-CheckBoxGlyphDisabled-Background, fuchsia);
        border-color: var(--CommonControls-CheckBoxBorderDisabled-Background, red);
        background-color: var(--CommonControls-CheckBoxBackgroundDisabled-Background, transparent);
    }

#bottomToolBar > .toolbar-button {
    /* This will align the button to the right side */
    margin-left: auto;
}
