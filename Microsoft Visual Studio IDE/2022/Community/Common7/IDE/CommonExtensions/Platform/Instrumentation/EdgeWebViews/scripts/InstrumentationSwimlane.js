define("instrumentationSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={67:(e,t,i)=>{var s,n;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(117)],n=function(e,t,i,s,n,a,r,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class c{constructor(e,t,s,n){this._logger=u.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._droppedRequest=!1,this._newDataEvent=new o.AggregatedEvent,this._colorScheme=new a.ChartColorScheme("#92AB00","#AECD00"),this._title=n,this._tooltip=n,this._InstrumentationDataSeries=e,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*c.PointRadiusInPixels+"px",this._marker.style.height=2*c.PointRadiusInPixels+"px",this._isMultiproc=s,s&&(this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction),this._patternCanvas=new OffscreenCanvas(5,5),this.drawHashPattern()),this._enabledAtStart=t,this._dataWarehouseRequestHandle=d.getCurrentDocument().isActiveSession().then((e=>(this._isCollectionActive=e,h.loadDataWarehouse()))).then((e=>{const t={customDomain:{CounterId:c.counterId}};return e.getFilteredData(t,c.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"InstrumentationTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=n.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.size||0===this._toggleEvents.length&&!this._enabledAtStart)return null;const i={Timestamp:e,Value:0},s=(e,t)=>t.Timestamp.greater(e.Timestamp);let a=!0;if(0!==this._toggleEvents.length){const t=r.Utilities.findLessThan(this._toggleEvents,i,s);this._toggleEvents[t].Timestamp.greater(e)?a=this._enabledAtStart:0===this._toggleEvents[t].Value&&(a=!1)}if(!a)return null;const o=this._InstrumentationDataSeries.getPointAtTimestamp(e,t);return{timestamp:o.timestamp,tooltip:this._tooltip,value:o.value}}onDataUpdate(e){this.requestUpdate()}draw(e,t){0!==this._InstrumentationDataSeries.cachedPoints.size&&0!==t.chartRect.width&&(e.save(),this._isMultiproc?this.drawMultiLine(e,t):this.drawSingleLine(e,t),e.restore())}drawSingleLine(e,t){e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=this._InstrumentationDataSeries.cachedPoints.values().next().value;if(0===i.length||0===t.chartRect.width)return;let s=0,a=i.length-1,r=this._enabledAtStart;for(const o of this._toggleEvents)o.Value>.5?(s=this.getPointIndex(i,o.Timestamp,0,i.length-1,n.PointToFind.Nearest),r=!0):(a=this.getPointIndex(i,o.Timestamp,0,i.length-1,n.PointToFind.Nearest),r=!1,this.drawBetweenIndices(e,t,s,a));r&&this.drawBetweenIndices(e,t,s,i.length-1)}drawMultiLine(e,t){let i=l.BigNumber.zero,s=this._InstrumentationDataSeries.getLatestPoint().Timestamp,n=this._enabledAtStart;for(const a of this._toggleEvents)a.Value>.5?(n=!0,s=a.Timestamp,this.drawBetweenTimestamps(e,t,i,s)):(n=!1,i=a.Timestamp);if(!n){const s=this._isCollectionActive?this._InstrumentationDataSeries.getLatestPoint().Timestamp:null;this.drawBetweenTimestamps(e,t,i,s)}}drawBetweenIndices(e,t,i,s){const n=this._InstrumentationDataSeries.cachedPoints.values().next().value;e.beginPath();for(let a=i;a<=s;++a)e.lineTo(this.getXCoordinate(n[a].Timestamp,t),this.getYCoordinate(n[a].Value,t));e.stroke(),e.lineTo(this.getXCoordinate(n[s].Timestamp,t),this.getYCoordinate(t.gridY.min,t)),e.lineTo(this.getXCoordinate(n[i].Timestamp,t),t.chartRect.height),e.closePath(),e.fill();const a=l.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(l.BigNumber.convertFromNumber(c.CounterFrequencyPerPixel).greater(a))for(let a=i;a<=s;++a)e.beginPath(),e.arc(this.getXCoordinate(n[a].Timestamp,t),this.getYCoordinate(n[a].Value,t),c.PointRadiusInPixels,0,2*Math.PI),e.fill()}drawBetweenTimestamps(e,t,i,s){const n=e.createPattern(this._patternCanvas,"repeat");e.fillStyle=n;const a=this.getXCoordinate(i,t),r=null===s?t.chartRect.width-a:this.getXCoordinate(s,t)-a;e.fillRect(a,0,r,t.chartRect.height)}getXCoordinate(e,t){return r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1)}getYCoordinate(e,t){return t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height)}drawHashPattern(){const e=this._patternCanvas.getContext("2d");e.clearRect(0,0,5,5),e.strokeStyle=i.Theme.getValue("diagnostics-host-border"),e.fillStyle="rgb(0, 0, 0, 0)",e.fillRect(0,0,5,5),e.moveTo(0,5),e.lineTo(5,0),e.stroke()}onThemeChanged(){this.drawHashPattern(),this.requestUpdate()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new l.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,s,a){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),h={Timestamp:t,Value:0};switch(a){case n.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,h,o,i,s);case n.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,h,o,i,s);case n.PointToFind.Nearest:default:{const i=r.Utilities.findLessThan(e,h,o),s=Math.min(i+1,e.length-1),n=l.BigNumber.subtract(t,e[i].Timestamp),a=l.BigNumber.subtract(e[s].Timestamp,t);return n.greater(a)?s:i}}}}t.EnabledDataSeries=c,c.PointRadiusInPixels=2.5,c.CounterFrequencyPerPixel=1e8/(2*c.PointRadiusInPixels+4)}.apply(t,s),void 0===n||(e.exports=n)},479:(e,t,i)=>{var s,n;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(803),i(886)],n=function(e,t,i,s,n,a,r,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._InstrumentationSwimlaneMarshaler=new u.InstrumentationSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new n.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._InstrumentationDataSeries=e,this._currentTimespan=t,this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),o.loadDataWarehouse().then((e=>{this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.size||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._InstrumentationDataSeries.cachedPoints.size||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>a.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),n=e=>t.chartRect.height-a.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((a=>{const r=i(a),o=this._InstrumentationDataSeries.getPointAtTimestamp(a,s.PointToFind.LessThanOrEqual),h=this._InstrumentationDataSeries.getPointAtTimestamp(a,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=n(o.value),d=i(h.timestamp),c={x:r,y:u+(n(h.value)-u)/(d-l)*(r-l)};e.beginPath(),e.moveTo(c.x+.5,n(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),n=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),a=this._rowId,r=this._rowType;this._InstrumentationSwimlaneMarshaler.getCurrentResultStatus().then((e=>{if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(r!==d.RowType.CallTreeNode&&r!==d.RowType.Function&&r!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:n.jsonValue,rowId:a,rowType:r,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps.map((e=>new h.BigNumber(e.h,e.l))),this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}getOccurrencePointIndex(e,t,i,n,r){const o=(e,t)=>t.greater(e);switch(r){case s.PointToFind.LessThanOrEqual:return a.Utilities.findLessThan(e,t,o,i,n);case s.PointToFind.GreaterThanOrEqual:return a.Utilities.findGreaterThan(e,t,o,i,n);case s.PointToFind.Nearest:default:{const i=a.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),n=h.BigNumber.subtract(t,e[i]),r=h.BigNumber.subtract(e[s],t);return n.greater(r)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===n||(e.exports=n)},371:(e,t,i)=>{var s,n;s=[i,t,i(31)],n=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.InstrumentationSwimlaneFactory=i.InstrumentationSwimlaneFactory}.apply(t,s),void 0===n||(e.exports=n)},892:(e,t,i)=>{var s,n;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(117),i(117),i(117)],n=function(e,t,i,s,n,a,r,o,h,l,u,d,c,m){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationCountersDataSeries=void 0;class g{constructor(e,t,s,n,p,_,T,w){this._logger=u.getLogger("InstrumentationCountersDataSeries"),this._drawFill=!1,this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._currentTimespan=new l.JsonTimespan(l.BigNumber.zero,l.BigNumber.zero),this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new o.AggregatedEvent,this._viewEventManager=d.getViewEventManager(),this._cachedPoints=new Map,this.legendData=[],this._pkeyToColorIdx=new Map,this._usedColors=new Set,this._processesInfo=new Map,this._isCollectionActive=!1,this._samples=250,this._currentTimespan=t,this._unitConverter=s,this._drawFill=p,this._title=_,this._tooltip=w,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.width=2*g.PointRadiusInPixels+"px",this._marker.style.height=2*g.PointRadiusInPixels+"px",this._isMultiproc=T,T?(this._processKeys=[],this._colorScheme=r.Utilities.getColorSet().map((e=>new a.ChartColorScheme(e,e))),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction)):(this._colorScheme=[new a.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)")],this._marker.style.backgroundColor=this._colorScheme[0].lineColor),this._viewEventManager.processSelectionChanged.addEventListener((e=>{this._processKeys=e.pkeys,this._usedColors.clear(),this._pkeyToColorIdx.forEach(((e,t)=>{this._processKeys.some((e=>m.getProcessKeyId(e)===t))&&this._usedColors.add(e)})),this.requestUpdate()})),c.getCurrentDocument().isActiveSession().then((e=>{this._isCollectionActive=e})).then((()=>h.loadDataWarehouse())).then((t=>{this._dw=t;const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,g.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get cachedPoints(){return this._cachedPoints}get graphLegendData(){return this.legendData}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose(),this._isMultiproc&&i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction)}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.size;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this.getLatestPoint().Timestamp))&&this.requestUpdate()}getLatestPoint(){if(0===this._cachedPoints.size)return null;const e=Array.from(this._cachedPoints.values()).map((e=>e[e.length-1]));return e.sort(((e,t)=>t.Timestamp.compareTo(e.Timestamp))),e[e.length-1]}getPointAtTimestamp(e,t=n.PointToFind.Nearest,s){if(0===this._cachedPoints.size)return null;const a=[];let r={Timestamp:e,Value:0};const o=s?m.getProcessKeyId(s):null;this._cachedPoints.forEach(((i,s)=>{o&&o!==s||0===i.length||(r=i[this.getOccurenceIndex(i.map((e=>e.Timestamp)),e,0,i.length-1,t)],a.push({pkey:s,point:r}))}));let h="";a.length>1?a.forEach((e=>{const t=this._processesInfo&&this._processesInfo.size>0?this._processesInfo.get(e.pkey)?.name:e.point.ToolTip;0!==e.point.Value&&(h+=`${t}: ${this._unitConverter.formatNumber(e.point.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)}\n`)})):h+=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(r.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0));const l=a.reduce(((e,t)=>e+t.point.Value),0);return{timestamp:r.Timestamp,tooltip:h,value:l}}draw(e,t){if(0===this._cachedPoints.size||t.gridX.elapsed.equals(l.BigNumber.zero)||t.chartRect.width<=0)return;const i=Array.from(this._cachedPoints.entries());i.sort(((e,t)=>{const[,i]=e,[,s]=t;return i[0].Timestamp.compareTo(s[0].Timestamp)}));const[s,n]=i[0];let a=this.cachedPoints.size>1,r=this.drawSingleChart(n,this._colorScheme[this._pkeyToColorIdx.get(s)],e,t,a);for(let s=1;s<g.ProcessLimit&&s<i.length;s++){s!==g.ProcessLimit-1&&s!==i.length-1||(a=!1);const[n,o]=i[s];r=this.drawSingleChart(o,this._colorScheme[this._pkeyToColorIdx.get(n)],e,t,a,r)}}drawSingleChart(e,t,s,n,a,o){if(0===e.length||n.gridX.elapsed.equals(l.BigNumber.zero)||n.chartRect.width<=0)return[];n.chartRect.width!==this._samples&&(this._samples=n.chartRect.width,this.requestUpdate());const h=null!=o,u=e=>n.chartRect.height-r.Utilities.scaleToRange(e,n.gridY.min,n.gridY.max,0,n.chartRect.height),d=e=>r.Utilities.convertToPixel(e,n.gridX,n.chartRect.width,!1);s.save(),s.globalCompositeOperation="destination-over",s.lineWidth=n.chartRect.height<100?1:2,g.GapPx=s.lineWidth/2,s.fillStyle=t.lineFillColor,s.strokeStyle=a?i.Theme.getValue("plugin-background-color"):t.lineColor;const c=[],m=d(e[0].Timestamp);s.beginPath();const p=h?this.interpolateY(o,e[0],n):u(e[0].Value);if(s.moveTo(m,p),e.forEach((e=>{const t=h?this.interpolateY(o,e,n):u(e.Value);s.lineTo(d(e.Timestamp),t),c.push({timestamp:e.Timestamp,yCoordinate:t})})),s.stroke(),this._drawFill){const t=e[e.length-1];s.lineTo(d(t.Timestamp),u(n.gridY.min)),s.lineTo(m,n.chartRect.height),s.closePath(),s.fill()}const _=l.BigNumber.divideNumber(n.gridX.elapsed,n.chartRect.width);return l.BigNumber.convertFromNumber(g.CounterFrequencyPerPixel).greater(_)&&e.forEach((e=>{s.beginPath();const t=h?this.interpolateY(o,e,n):u(e.Value);s.arc(d(e.Timestamp),t,g.PointRadiusInPixels,0,2*Math.PI),s.fill()})),s.restore(),c}interpolateY(e,t,i){const s=t.Timestamp,a=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,n.PointToFind.LessThanOrEqual)],o=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,n.PointToFind.GreaterThanOrEqual)],h=(l=t.Value,i.chartRect.height-r.Utilities.scaleToRange(l,i.gridY.min,i.gridY.max,0,i.chartRect.height));var l;if(o.timestamp.compareTo(s)<0)return h;const u=r.Utilities.linearInterpolate(s,a.timestamp,a.yCoordinate,o.timestamp,o.yCoordinate),d=i.chartRect.height<=u?0:i.chartRect.height-(u-g.GapPx);return Math.max(h-d,0)}onThemeChanged(){const e=r.Utilities.getColorSet();this._colorScheme=e.map((e=>new a.ChartColorScheme(e,e))),this.requestUpdate()}getOccurenceIndex(e,t,i,s,a){const o=(e,t)=>t.greaterOrEqual(e);switch(a){case n.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,t,o,i,s);case n.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,t,o,i,s);case n.PointToFind.Nearest:default:{i=r.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1);const n=l.BigNumber.subtract(t,e[i]),a=l.BigNumber.subtract(e[s],t);return n.greater(a)?s:i}}}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(l.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=l.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=l.BigNumber.subtract(this._currentTimespan.begin,l.BigNumber.min(e,this._currentTimespan.begin)),i=l.BigNumber.multiply(l.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),n=l.BigNumber.add(i,l.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),a={type:"SamplePoints",begin:i.jsonValue,end:n.jsonValue,samples:Math.max(this._samples,2),processKeys:this._processKeys};this._countersResult.getResult(a).then((e=>{const t=Array.isArray(e)?e:[e];this.cachePoints(t)})).then((()=>{if(!this._isCollectionActive){const e={customDomain:{Task:"GetProcesses"}};return this._dw.getFilteredData(e,g.analyzerId).then((e=>e.getResult({type:"GetProcesses"}))).then((e=>{e.forEach((e=>{this._processesInfo.set(m.getProcessKeyId(e.key),{name:""===e.key.name?e.key.pid.toString():e.key.name,pid:e.key.pid})}))}))}return Promise.resolve()})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),s.Constants.TimeoutImmediate)}cachePoints(e){this.cachedPoints.clear(),e.forEach((e=>{if(0===e.p.length)return;const t=m.getProcessKeyId(e.key);this._cachedPoints.has(t)||this._cachedPoints.set(t,[]),e.p.forEach((s=>{const n=new l.BigNumber(s.t.h,s.t.l);this._seriesMin=Math.min(this._seriesMin,s.v),this._seriesMax=Math.max(this._seriesMax,s.v),this._cachedPoints.get(t).push({Timestamp:n,Value:s.v,ToolTip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",e.key.pid)})}))})),this.setLegendData(e),this._newDataEvent.invokeEvent(this)}setLegendData(e){this.legendData=[];const t=this._processesInfo&&this._processesInfo.size>0;let s=0;for(let n=0;n<g.ProcessLimit&&n<e.length;n++){const a=e[n],r=m.getProcessKeyId(a.key);let o;const h=this._pkeyToColorIdx.get(r);if(void 0!==h)o=this._colorScheme[h];else{for(;this._usedColors.has(s);)s=(s+1)%this._colorScheme.length;o=this._colorScheme[s],this._usedColors.add(s),this._pkeyToColorIdx.set(r,s)}const l=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",a.key.pid),u=t?this._processesInfo.get(r).name:l;this.legendData.push({color:o.lineFillColor,legendText:u,legendTooltip:l})}}}t.InstrumentationCountersDataSeries=g,g.PointRadiusInPixels=2.5,g.CounterFrequencyPerPixel=1e8/(2*g.PointRadiusInPixels+4),g.ProcessLimit=5,g.GapPx=2}.apply(t,s),void 0===n||(e.exports=n)},31:(e,t,i)=>{var s,n;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(892),i(67),i(479),i(560)],n=function(e,t,i,s,n,a,r,o,h,l,u,d,c,m,g){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneFactory=void 0,t.InstrumentationSwimlaneFactory=function(e,t,p,_,T,w){const C=new u.SwimlaneConfiguration(e,T,_);C.header.isBodyExpanded=t;const v=C.graph,S=new i.LocalizedUnitConverter(v.jsonConfig.Units,v.resources),P=[],R=new d.InstrumentationCountersDataSeries(v.jsonConfig.Series[0].DataSource.CounterId,C.graph.timeRange,new i.LocalizedUnitConverter(v.jsonConfig.Units,v.resources),new n.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),!0,C.graph.resources[v.jsonConfig.Series[0].Legend],v.jsonConfig.IsMultiproc,C.graph.resources[v.jsonConfig.Series[0].LegendTooltip]);P.push(R);const b=new c.EnabledDataSeries(R,v.jsonConfig.EnabledAtStart,v.jsonConfig.IsMultiproc,C.graph.resources.InstrumentationGraphProfilingEnabled);if(P.push(b),!v.jsonConfig.IsCollecting&&!v.jsonConfig.IsPerfDebugger){const e=new m.HighlightDataSeries(R,C.graph.timeRange,C.graph.resources.InstrumentationGraphCurrentFunction);P.push(e)}C.graph.jsonConfig.Series=[];const y=new r.MultiSeriesGraph(C.graph,P);y.container.setAttribute("aria-label",e.Title);const f=new o.Scale(C.graph.scale,s.ScaleType.Left,S),I=new o.Scale(C.graph.scale,s.ScaleType.Right,S);y.scaleChangedEvent.addEventListener(f.onScaleChanged.bind(f)),y.scaleChangedEvent.addEventListener(I.onScaleChanged.bind(I)),C.header.unit=C.graph.unit;const D=new l.SwimlaneBase(C.header,C.graph.height,T,w);return y.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D)),D.addMainRegionControl(new h.SelectionOverlay(y,T,w,C.id)),D.addMainRegionControl(new a.GridLineRenderer(T)),D.addLeftRegionControl(f),D.addRightRegionControl(I),v.jsonConfig.IsMultiproc&&D.addTitleControl(new g.CustomLegend(R)),D}}.apply(t,s),void 0===n||(e.exports=n)},803:(e,t,i)=>{var s,n;s=[i,t,i(226),i(117)],n=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneMarshaler=void 0;let n=null;t.InstrumentationSwimlaneMarshaler=class{constructor(){null===n&&(n=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.Instrumentation.InstrumentationToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(n,"GraphHighlightChangedEvent")}updateGraphHighlight(e,t){return n._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return n._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}getCurrentResultStatus(){return n._call("getCurrentResultStatus")}}}.apply(t,s),void 0===n||(e.exports=n)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,n,a,r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(r=t.ResultTaskType||(t.ResultTaskType={}))[r.Expand=1]="Expand",r[r.Search=2]="Search",r[r.GetData=3]="GetData",r[r.Sort=4]="Sort",(a=t.RowType||(t.RowType={}))[a.Unknown=0]="Unknown",a[a.Process=1]="Process",a[a.Module=2]="Module",a[a.Function=3]="Function",a[a.Thread=4]="Thread",a[a.CallTreeNode=5]="CallTreeNode",a[a.Allocation=6]="Allocation",(n=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[n.NotStarted=0]="NotStarted",n[n.InProgress=1]="InProgress",n[n.Completed=2]="Completed",n[n.Canceled=3]="Canceled",n[n.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Instrumentation=2]="Instrumentation"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},226:e=>{"use strict";e.exports=i}},n={},function e(t){var i=n[t];if(void 0!==i)return i.exports;var a=n[t]={exports:{}};return s[t](a,a.exports,e),a.exports}(371);var s,n}));
// SIG // Begin signature block
// SIG // MIIoQwYJKoZIhvcNAQcCoIIoNDCCKDACAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // /jiGxB19Ks1QO7uT7jYGKRXmz1COg1wAL0y3KGqt60mg
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAABARsdAb/VysncgAA
// SIG // AAAEBDANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTI0MDkxMjIwMTExNFoX
// SIG // DTI1MDkxMTIwMTExNFowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // tCg32mOdDA6rBBnZSMwxwXegqiDEUFlvQH9Sxww07hY3
// SIG // w7L52tJxLg0mCZjcszQddI6W4NJYb5E9QM319kyyE0l8
// SIG // EvA/pgcxgljDP8E6XIlgVf6W40ms286Cr0azaA1f7vaJ
// SIG // jjNhGsMqOSSSXTZDNnfKs5ENG0bkXeB2q5hrp0qLsm/T
// SIG // WO3oFjeROZVHN2tgETswHR3WKTm6QjnXgGNj+V6rSZJO
// SIG // /WkTqc8NesAo3Up/KjMwgc0e67x9llZLxRyyMWUBE9co
// SIG // T2+pUZqYAUDZ84nR1djnMY3PMDYiA84Gw5JpceeED38O
// SIG // 0cEIvKdX8uG8oQa047+evMfDRr94MG9EWwIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFPIboTWxEw1PmVpZS+AzTDwo
// SIG // oxFOMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDI5MjMwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQCI5g/S
// SIG // KUFb3wdUHob6Qhnu0Hk0JCkO4925gzI8EqhS+K4umnvS
// SIG // BU3acsJ+bJprUiMimA59/5x7WhJ9F9TQYy+aD9AYwMtb
// SIG // KsQ/rst+QflfML+Rq8YTAyT/JdkIy7R/1IJUkyIS6srf
// SIG // G1AKlX8n6YeAjjEb8MI07wobQp1F1wArgl2B1mpTqHND
// SIG // lNqBjfpjySCScWjUHNbIwbDGxiFr93JoEh5AhJqzL+8m
// SIG // onaXj7elfsjzIpPnl8NyH2eXjTojYC9a2c4EiX0571Ko
// SIG // mhENF3RtR25A7/X7+gk6upuE8tyMy4sBkl2MUSF08U+E
// SIG // 2LOVcR8trhYxV1lUi9CdgEU2CxODspdcFwxdT1+G8YNc
// SIG // gzHyjx3BNSI4nOZcdSnStUpGhCXbaOIXfvtOSfQX/UwJ
// SIG // oruhCugvTnub0Wna6CQiturglCOMyIy/6hu5rMFvqk9A
// SIG // ltIJ0fSR5FwljW6PHHDJNbCWrZkaEgIn24M2mG1M/Ppb
// SIG // /iF8uRhbgJi5zWxo2nAdyDBqWvpWxYIoee/3yIWpquVY
// SIG // cYGhJp/1I1sq/nD4gBVrk1SKX7Do2xAMMO+cFETTNSJq
// SIG // fTSSsntTtuBLKRB5mw5qglHKuzapDiiBuD1Zt4QwxA/1
// SIG // kKcyQ5L7uBayG78kxlVNNbyrIOFH3HYmdH0Pv1dIX/Mq
// SIG // 7avQpAfIiLpOWwcbjzCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xgholMIIaIQIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAE
// SIG // BGx0Bv9XKydyAAAAAAQEMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCCwZONmKw0mMrTn99EhIaye8PmU+GADE2kc
// SIG // kHwH2CCXhjBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBADV/YUQY
// SIG // 80r2KyBJxgBRhZQGuEx2u2fzxKtCFnjBcBPth8+FCDYi
// SIG // EvNGfqM2kcfPjv6ubjWf/ERpN6tylu47Xxk0Z/0EFT8J
// SIG // sfLhdour+emYjdWzfVT4p8dAb76XtXzY+I0R0SYBtSc/
// SIG // /OjOjHIVLV2z+uisiVcIjoOIOrWddfSWDEtAV+4TdOMl
// SIG // yalzLf2bcMipvigCXmjpLEFHFYCMBbdDC/Jp9NZG0FNd
// SIG // KMNFsnLdw1PN3NCaKteutJYqIZgO75X9oEQxQFPTucX8
// SIG // dQrZ8x67nOMF5eHcKIPggrQMsb06+huqbyg8RGZqoLjB
// SIG // NcnGmr9xffor6QnTXftK3RMZUrqhghevMIIXqwYKKwYB
// SIG // BAGCNwMDATGCF5swgheXBgkqhkiG9w0BBwKggheIMIIX
// SIG // hAIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBWQYLKoZIhvcN
// SIG // AQkQAQSgggFIBIIBRDCCAUACAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgXQatJu2CxHVQQwjKW/+w
// SIG // D+jQq5YxTEfVJJ5LRSKpT78CBmhSvkKpOhgSMjAyNTA2
// SIG // MzAxNDE1MzcuNDNaMASAAgH0oIHZpIHWMIHTMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQg
// SIG // SXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjoyRDFBLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaCCEf4wggcoMIIFEKADAgECAhMzAAAB/XP5
// SIG // aFrNDGHtAAEAAAH9MA0GCSqGSIb3DQEBCwUAMHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwMB4XDTI0MDcyNTE4
// SIG // MzExNloXDTI1MTAyMjE4MzExNlowgdMxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVs
// SIG // YW5kIE9wZXJhdGlvbnMgTGltaXRlZDEnMCUGA1UECxMe
// SIG // blNoaWVsZCBUU1MgRVNOOjJEMUEtMDVFMC1EOTQ3MSUw
// SIG // IwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
// SIG // aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
// SIG // AgEAoWWs+D+Ou4JjYnRHRedu0MTFYzNJEVPnILzc02R3
// SIG // qbnujvhZgkhp+p/lymYLzkQyG2zpxYceTjIF7HiQWbt6
// SIG // FW3ARkBrthJUz05ZnKpcF31lpUEb8gUXiD2xIpo8YM+S
// SIG // D0S+hTP1TCA/we38yZ3BEtmZtcVnaLRp/Avsqg+5KI0K
// SIG // w6TDJpKwTLl0VW0/23sKikeWDSnHQeTprO0zIm/btagS
// SIG // Ym3V/8zXlfxy7s/EVFdSglHGsUq8EZupUO8XbHzz7tUR
// SIG // yiD3kOxNnw5ox1eZX/c/XmW4H6b4yNmZF0wTZuw37yA1
// SIG // PJKOySSrXrWEh+H6++Wb6+1ltMCPoMJHUtPP3Cn0CNcN
// SIG // vrPyJtDacqjnITrLzrsHdOLqjsH229Zkvndk0IqxBDZg
// SIG // MoY+Ef7ffFRP2pPkrF1F9IcBkYz8hL+QjX+u4y4Uqq4U
// SIG // tT7VRnsqvR/x/+QLE0pcSEh/XE1w1fcp6Jmq8RnHEXik
// SIG // ycMLN/a/KYxpSP3FfFbLZuf+qIryFL0gEDytapGn1ONj
// SIG // VkiKpVP2uqVIYj4ViCjy5pLUceMeqiKgYqhpmUHCE2Ws
// SIG // sLLhdQBHdpl28+k+ZY6m4dPFnEoGcJHuMcIZnw4cOwix
// SIG // ojROr+Nq71cJj7Q4L0XwPvuTHQt0oH7RKMQgmsy7CVD7
// SIG // v55dOhdHXdYsyO69dAdK+nWlyYcCAwEAAaOCAUkwggFF
// SIG // MB0GA1UdDgQWBBTpDMXA4ZW8+yL2+3vA6RmU7oEKpDAf
// SIG // BgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBf
// SIG // BgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBU
// SIG // aW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYI
// SIG // KwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01p
// SIG // Y3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEw
// SIG // KDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQM
// SIG // MAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAY9hYX+T5AmCrYGaH96TdR5T5
// SIG // 2/PNOG7ySYeopv4flnDWQLhBlravAg+pjlNv5XSXZrKG
// SIG // v8e4s5dJ5WdhfC9ywFQq4TmXnUevPXtlubZk+02BXK6/
// SIG // 23hM0TSKs2KlhYiqzbRe8QbMfKXEDtvMoHSZT7r+wI2I
// SIG // gjYQwka+3P9VXgERwu46/czz8IR/Zq+vO5523Jld6ssV
// SIG // uzs9uwIrJhfcYBj50mXWRBcMhzajLjWDgcih0DuykPcB
// SIG // poTLlOL8LpXooqnr+QLYE4BpUep3JySMYfPz2hfOL3g0
// SIG // 2WEfsOxp8ANbcdiqM31dm3vSheEkmjHA2zuM+Tgn4j5n
// SIG // +Any7IODYQkIrNVhLdML09eu1dIPhp24lFtnWTYNaFTO
// SIG // fMqFa3Ab8KDKicmp0AthRNZVg0BPAL58+B0UcoBGKzS9
// SIG // jscwOTu1JmNlisOKkVUVkSJ5Fo/ctfDSPdCTVaIXXF7l
// SIG // 40k1cM/X2O0JdAS97T78lYjtw/PybuzX5shxBh/RqTPv
// SIG // CyAhIxBVKfN/hfs4CIoFaqWJ0r/8SB1CGsyyIcPfEgMo
// SIG // 8ceq1w5Zo0JfnyFi6Guo+z3LPFl/exQaRubErsAUTfyB
// SIG // Y5/5liyvjAgyDYnEB8vHO7c7Fg2tGd5hGgYs+AOoWx24
// SIG // +XcyxpUkAajDhky9Dl+8JZTjts6BcT9sYTmOodk/SgIw
// SIG // ggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAV
// SIG // MA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0
// SIG // aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAx
// SIG // ODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEF
// SIG // AAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7V
// SIG // gtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/H
// SIG // ZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKD
// SIG // RLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gm
// SIG // U3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36M
// SIG // EBydUv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+y
// SIG // OSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoF
// SIG // VZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJi
// SIG // ss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGa
// SIG // RnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+Autuqfjbs
// SIG // Nkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afo
// SIG // mXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9
// SIG // ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZk
// SIG // i1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y
// SIG // 1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV
// SIG // 2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0C
// SIG // AwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEw
// SIG // IwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/
// SIG // LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnp
// SIG // cjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8G
// SIG // CCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYD
// SIG // VR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9
// SIG // lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoG
// SIG // CCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcN
// SIG // AQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pc
// SIG // FLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHk
// SIG // wo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AF
// SIG // vonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4
// SIG // U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2
// SIG // EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8Atq
// SIG // gcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mj
// SIG // dAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZM
// SIG // cm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQE
// SIG // cb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2f
// SIG // pCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBM
// SIG // drVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L
// SIG // +DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJ
// SIG // C4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU
// SIG // 5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/
// SIG // 2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIDWTCC
// SIG // AkECAQEwggEBoYHZpIHWMIHTMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFuZCBP
// SIG // cGVyYXRpb25zIExpbWl0ZWQxJzAlBgNVBAsTHm5TaGll
// SIG // bGQgVFNTIEVTTjoyRDFBLTA1RTAtRDk0NzElMCMGA1UE
// SIG // AxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaIj
// SIG // CgEBMAcGBSsOAwIaAxUAoj0WtVVQUNSKoqtrjinRAsBU
// SIG // doOggYMwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UE
// SIG // CBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEe
// SIG // MBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYw
// SIG // JAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0Eg
// SIG // MjAxMDANBgkqhkiG9w0BAQsFAAIFAOwNDfAwIhgPMjAy
// SIG // NTA2MzAxMzIxNTJaGA8yMDI1MDcwMTEzMjE1MlowdzA9
// SIG // BgorBgEEAYRZCgQBMS8wLTAKAgUA7A0N8AIBADAKAgEA
// SIG // AgIXXgIB/zAHAgEAAgITZTAKAgUA7A5fcAIBADA2Bgor
// SIG // BgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIB
// SIG // AAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBCwUA
// SIG // A4IBAQBcr0IjW7lgvyt9/fPmyASwdytCdwyrTsXIife2
// SIG // j8DxSQ9asre9//iSJ0HKYwO2yW2uKWSsRgPRyodqCjNU
// SIG // TsQiYGQS46+Ao2HNl31+I8hJYyeaBS7LV0PFlb2goFBP
// SIG // kLJBJzjNVp9DGEh7g5MQQmS9d4c17pETy0RtbzEZMX4o
// SIG // +6FtfqjlRS6l/U4RyY09iQWyRapYaGaxEu6LLAwkR2pn
// SIG // xl/zJoRnj7UJDPzD5jzZvxjF5ce1UuDbxFYpjlaP4Gzs
// SIG // UGYGVRfDd/AgJlsP/3RzqZgMwcIhHkeasKozbHLSIpJO
// SIG // b46iG9GQ5FTJPdGQuLuDKZIFWhL4HTUJ/Z8KptrjMYIE
// SIG // DTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNV
// SIG // BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
// SIG // HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEm
// SIG // MCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENB
// SIG // IDIwMTACEzMAAAH9c/loWs0MYe0AAQAAAf0wDQYJYIZI
// SIG // AWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG
// SIG // 9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQgK0ypJjuWF10c
// SIG // T3VtHl5WnUt2HErocXtVZda23ZgLbuYwgfoGCyqGSIb3
// SIG // DQEJEAIvMYHqMIHnMIHkMIG9BCCAKEgNyUowvIfx/eDf
// SIG // YSupHkeF1p6GFwjKBs8lRB4NRzCBmDCBgKR+MHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB/XP5aFrN
// SIG // DGHtAAEAAAH9MCIEIG3xQ358G+gtmn5vNHAYnXl1mxYt
// SIG // SkA5emd7YWXzvm5CMA0GCSqGSIb3DQEBCwUABIICAH44
// SIG // gVSDXa7KV5OWTyrIXS7qHAuldUBS7q8fL2holE6lbGRb
// SIG // yFcw9gD8z4hHivu4eTARWDD+Hw69IRJrtOoG+O1sdwDx
// SIG // JuCfJcPNKw0KTaGGyPT7vtxb3JzD+BPQ5IIKxU7OybsO
// SIG // JZlw3DvYQ6ErYH+5265IKS/052xmeAemvDu8cRQxv3BJ
// SIG // YpGkHpFizZabKaUSiafNIZsltgZSr9Gqex/V1tFCUoA0
// SIG // n2i9JAjaGr134I/RKDP3l1t5J9iqVyaoOuNC0wiQ1Xhz
// SIG // msv7muZYT5kOZcktX29lcYJzXJUBuUYi0SPhJGlk90I4
// SIG // 1SLPR+Kaop1RJKH0UPZdCayV8UqNRvdh6FQcnBSJHQsy
// SIG // gvbBLIsp6Ymy49lHjFXEfl9j8n10gf0c/F/jH6WDGYqZ
// SIG // nC3AmubVy2eAaa6ET5g/RcZ5uGSSQodNAv65PlWNGUge
// SIG // fC86cYDG+g3gTs50o1v7ytns6jhxnsCzDR1TXQtkJ5Nq
// SIG // xP1wLmwEARuoK4fTipdzm9aL//1IhfSN+7UPgd7DTSHe
// SIG // cSGpuLODZY5BJarqPHvYtf2aF9xO7xnigmmQ0iKR0k4n
// SIG // 09jM2p/i7q0kBrgB3HQq22x9Q5kCSZ43R2yhSoW9w+5r
// SIG // E+kggQQvwMnVriJp6b/lSyFs+Xhtk9pSKD+eCDUMiTar
// SIG // dQhpced8fDG0VXUtnwGG
// SIG // End signature block
