<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoadingDataMessage" xml:space="preserve">
    <value>Loading data...</value>
  </data>
  <data name="NoDataMessage" xml:space="preserve">
    <value>No events occurred in the selected timespan</value>
  </data>
  <data name="EventsListAriaLabel" xml:space="preserve">
    <value>Events in selected time range</value>
  </data>
  <data name="EventsListHeaderId" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="EventsListHeaderEventName" xml:space="preserve">
    <value>Provider Name/Event Name</value>
  </data>
  <data name="EventsListHeaderEventId" xml:space="preserve">
    <value>Event ID</value>
  </data>
  <data name="EventsListHeaderProviderGuid" xml:space="preserve">
    <value>Provider Guid</value>
  </data>
  <data name="EventsListHeaderProcessId" xml:space="preserve">
    <value>Process ID</value>
  </data>
  <data name="EventsListHeaderThreadId" xml:space="preserve">
    <value>Thread ID</value>
  </data>
  <data name="EventsListHeaderDescription" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="UnknownDataLabel" xml:space="preserve">
    <value>[Unknown]</value>
  </data>
  <data name="EventsListSideBarHeader" xml:space="preserve">
    <value>Additional Properties</value>
  </data>
  <data name="EventsListSideBarPlaceholderText" xml:space="preserve">
    <value>No additional properties to display. Click a row to view additional properties for the event.</value>
  </data>
  <data name="EventsListHeaderProcessName" xml:space="preserve">
    <value>Process Name</value>
  </data>
  <data name="EventsListHeaderAdjustedTimestampMSec" xml:space="preserve">
    <value>Timestamp (ms)</value>
  </data>
  <data name="Button_EventsViewApply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Button_EventsViewCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(Select all)</value>
  </data>
  <data name="ContextMenu_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="EventsListSideBarCommonHeader" xml:space="preserve">
    <value>Common Properties</value>
  </data>
  <data name="EventsListSideBarPayloadHeader" xml:space="preserve">
    <value>Payload Properties</value>
  </data>
  <data name="InformationClippedEvents" xml:space="preserve">
    <value>The count of displayed events is limited to {0}. This view has {1} total events, which have been clipped in the table. Please add more filters to reduce the event count.</value>
  </data>
  <data name="InformationClippedEventsDoNotShow" xml:space="preserve">
    <value>Don't show again</value>
  </data>
  <data name="EventsListSideBarStackHeader" xml:space="preserve">
    <value>Stack</value>
  </data>
  <data name="VerticalSplitterAriaLabel" xml:space="preserve">
    <value>Splitter</value>
  </data>
  <data name="ContextMenu_TimeFilter_SetEnd" xml:space="preserve">
    <value>Set End</value>
  </data>
  <data name="ContextMenu_TimeFilter_SetStart" xml:space="preserve">
    <value>Set Start</value>
  </data>
  <data name="ContextMenu_TimeFilter_SetInterval" xml:space="preserve">
    <value>Set Interval</value>
  </data>
  <data name="InformationTotalEvents" xml:space="preserve">
    <value>This view has {0} total events.</value>
  </data>
  <data name="ContextMenu_GoToSourceFile" xml:space="preserve">
    <value>Go To Source File</value>
    <comment>The label shown in a context menu for the 'Show source file' command which will open up the source file in VS for the selected row</comment>
  </data>
  <data name="FilterLimitMessage" xml:space="preserve">
    <value>The number of filter parameters is limited to 125. There are {0} selected filters. Please modify the filter selection to display data.</value>
  </data>
  <data name="Button_Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FilterButton" xml:space="preserve">
    <value>Filter column</value>
  </data>
  <data name="ShowJmc" xml:space="preserve">
    <value>Show Just My Code</value>
  </data>
  <data name="ExternalCodeLabel" xml:space="preserve">
    <value>[External Code]</value>
  </data>
  <data name="SystemCallLabel" xml:space="preserve">
    <value>[System Call]</value>
  </data>
  <data name="ResetFiltersText" xml:space="preserve">
    <value>Reset Filters</value>
  </data>
  <data name="Overlay_ProgressIndeterminateAriaLabel" xml:space="preserve">
    <value>Loading data...</value>
    <comment>Aria label for indeterminate progress bar in Events Viewer tool after data collection</comment>
  </data>
  <data name="UnixTimeInMilliseconds" xml:space="preserve">
    <value>Date Time</value>
  </data>
  <data name="AsyncMethodLabel" xml:space="preserve">
    <value>[Async]</value>
  </data>
  <data name="FoldedNativeLabel" xml:space="preserve">
    <value>[Native]</value>
  </data>
  <data name="UnwalkableStackLabel" xml:space="preserve">
    <value>[Unwalkable]</value>
  </data>
  <data name="AnyStacksAriaLabel" xml:space="preserve">
    <value>Stacks for the selected events in the time range</value>
  </data>
  <data name="AnyStacksHeaderModuleName" xml:space="preserve">
    <value>Module Name</value>
  </data>
  <data name="AnyStacksHeaderModuleNameToolTip" xml:space="preserve">
    <value>The module this function is from</value>
  </data>
  <data name="AnyStacksHeaderName" xml:space="preserve">
    <value>Function Name</value>
  </data>
  <data name="AnyStacksHeaderNameToolTip" xml:space="preserve">
    <value>Name and type signature of the function</value>
  </data>
  <data name="AnyStacksHeaderSelf" xml:space="preserve">
    <value>Self</value>
  </data>
  <data name="AnyStacksHeaderSelfToolTip" xml:space="preserve">
    <value>The number of the specified event(s) that occured in this function</value>
  </data>
  <data name="AnyStacksHeaderTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="AnyStacksHeaderTotalToolTip" xml:space="preserve">
    <value>The number of the specified event(s) that occured in this function and it's children</value>
  </data>
  <data name="ContextMenu_ShowStacks_Provider" xml:space="preserve">
    <value>Show Stacks For Provider</value>
  </data>
  <data name="ContextMenu_ShowStacks_Event" xml:space="preserve">
    <value>Show Stacks For Event</value>
  </data>
  <data name="MultipleModuleLabel" xml:space="preserve">
    <value>Multiple modules</value>
  </data>
  <data name="ProcessIdFormat" xml:space="preserve">
    <value>PID: {0}</value>
    <comment>{0} will be the ID of the process</comment>
  </data>
  <data name="ProcessNameFormat" xml:space="preserve">
    <value>{0} (PID: {1})</value>
    <comment>{0} will be the name of the process and {1} will be the ID of the process</comment>
  </data>
  <data name="UnknownModuleLabel" xml:space="preserve">
    <value>[External Code]</value>
  </data>
  <data name="EventRowLabel" xml:space="preserve">
    <value>[Event]</value>
  </data>
  <data name="EventsRowLabel" xml:space="preserve">
    <value>[Events]</value>
  </data>
  <data name="ShowNative" xml:space="preserve">
    <value>Show Native Code</value>
  </data>
  <data name="ExternalCallLabel" xml:space="preserve">
    <value>[External Code]</value>
  </data>
  <data name="ContextMenu_CopyAsMarkdown" xml:space="preserve">
    <value>Copy as Markdown</value>
  </data>
  <data name="NoSource" xml:space="preserve">
    <value>Unable to determine source location.</value>
  </data>
  <data name="ContextMenu_ShowStacks_All" xml:space="preserve">
    <value>Show All Stacks</value>
  </data>
  <data name="ContextMenu_ShowStacks_Task" xml:space="preserve">
    <value>Show Stacks For Task</value>
  </data>
  <data name="SystemCodeLabel" xml:space="preserve">
    <value>[System Code]</value>
  </data>
  <data name="ContextMenu_LoadAllSymbols" xml:space="preserve">
    <value>Load All Symbols</value>
  </data>
  <data name="ContextMenu_LoadModuleSymbols" xml:space="preserve">
    <value>Load Module Symbols</value>
  </data>
  <data name="Button_OpenSymbolSettings" xml:space="preserve">
    <value>Open Symbol Settings</value>
  </data>
  <data name="NoStackDataMessage" xml:space="preserve">
    <value>No selected events contain stack information.</value>
  </data>
  <data name="NativeCodeLabel" xml:space="preserve">
    <value>[Native Code]</value>
    <comment>Label when native code is present</comment>
  </data>
</root>