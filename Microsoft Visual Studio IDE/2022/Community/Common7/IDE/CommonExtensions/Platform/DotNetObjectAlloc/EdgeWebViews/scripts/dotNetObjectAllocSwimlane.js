define("dotNetObjectAllocSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return a={952:(e,t,i)=>{var a;a=function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InsightsViewId=t.ActiveCollectionViewId=t.FunctionListDetailsViewId=t.CallTreeDetailsViewId=t.DotNetAllocAnalyzerId=t.AllocationDetailsViewId=t.CollectionDetailsViewId=void 0,t.CollectionDetailsViewId=function(){return"2AB6F58C-F91F-4436-8D49-0C6E0F5E9657"},t.AllocationDetailsViewId=function(){return"A4C18565-9849-44E4-A6B0-9E9487D2024E"},t.DotNetAllocAnalyzerId=function(){return"DEF9F958-0E21-4364-8DD3-1CFB0C57FC7D"},t.CallTreeDetailsViewId=function(){return"A0A01775-6F3D-4B01-BFBE-FDD0F1F33EA4"},t.FunctionListDetailsViewId=function(){return"3ECF896D-96DC-4348-8A5C-6A853AA5C8CC"},t.ActiveCollectionViewId=function(){return"5979F2F4-B01D-4A63-AAE4-CE5C611EE4F8"},t.InsightsViewId=function(){return"5B496FFD-A4E8-48C1-BF62-F8435DFAD24C"}}.apply(t,[i,t]),void 0===a||(e.exports=a)},3766:(e,t,i)=>{var a,s;a=[i,t,i(5226),i(8117)],s=function(e,t,i,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DotNetObjectAllocMarshaler=void 0;let s=null;t.DotNetObjectAllocMarshaler=class{constructor(){null===s&&(s=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.DotNetObjectAllocation.DotNetObjectAllocationMarshaler",{},!0)),this._onGoToAllocation=new a.ObservableEvent(s,"onGoToAllocation"),this._onCrossReferenceEvent=new a.ObservableEvent(s,"onCrossReferenceEvent"),this._graphHighlightEvent=new a.ObservableEvent(s,"GraphHighlightChangedEvent"),this._updateNativeCodeEvent=new a.ObservableEvent(s,"updateNativeCodeEvent"),this._updateCollectionEvent=new a.ObservableEvent(s,"updateCollectionEvent")}get onGoToAllocation(){return this._onGoToAllocation}goToAllocation(e){return s._call("goToAllocation",e)}get onCrossReferenceEvent(){return this._onCrossReferenceEvent}crossReference(e){return s._call("crossReference",e)}updateGraphHighlight(e){return s._call("raiseGraphHighlightChangedEvent",e)}clearGraphHighlight(){return s._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}getDoubleClickTimeMs(){return s._call("getDoubleClickTimeMs")}isNativeCodeFoldingEnabled(){return s._call("isNativeCodeFoldingEnabled")}setNativeCodeFoldingEnabled(e){return s._call("setNativeCodeFolding",{isEnabled:e})}get onUpdateNativeCodeFolding(){return this._updateNativeCodeEvent}getColumnSettings(e){return s._call("getColumnSettings",e)}onColumnChanged(e,t){return s._call("onColumnChanged",e,t)}get onUpdateCollection(){return this._updateCollectionEvent}isCollectionEnabled(){return s._call("isCollectionEnabled")}isPauseResumeSupported(){return s._call("isPauseResumeSupported")}setCollectionEnabled(e){return s._call("setCollectionEnabled",e)}openLink(e){return s._call("openLink",e)}}}.apply(t,a),void 0===s||(e.exports=s)},4557:(e,t,i)=>{var a,s;a=[i,t,i(5226),i(2560),i(2560),i(8117),i(8117)],s=function(e,t,i,a,s,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeltaChartSeries=void 0,t.DeltaChartSeries=class{constructor(e,t){this._newDataEvent=new n.AggregatedEvent,this._dataSeries=e,this._resources=t,this._graphStrokeColor=i.Theme.getValue("diagnostics-host-graph-line"),this._marker=document.createElement("div"),this._onNewDataBoundFunction=()=>this._newDataEvent.invokeEvent(this),this._dataSeries.newDataEvent.addEventListener(this._onNewDataBoundFunction),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction)}get minValue(){return-100}get maxValue(){return 100}get marker(){return this._marker}get title(){return this._resources.CollectedObjectLineSeries}get tooltip(){return""}get newDataEvent(){return this._newDataEvent}dispose(){this._dataSeries.newDataEvent.removeEventListener(this._onNewDataBoundFunction),i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction),this._newDataEvent.dispose()}onViewportChanged(e){this._dataSeries.onViewportChanged(e)}onDataUpdate(e){this._dataSeries.onDataUpdate(e)}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._dataSeries.cachedPoints.length)return null;const n=this._dataSeries.getIndexOfTimestamp(e,a.PointToFind.Nearest),o=0!==n?n-1:n,l=n<this._dataSeries.cachedPoints.length-1?n+1:n,h=r.BigNumber.subtract(this._dataSeries.cachedPoints[n].Timestamp,this._dataSeries.cachedPoints[o].Timestamp),d=r.BigNumber.add(this._dataSeries.cachedPoints[o].Timestamp,r.BigNumber.divideNumber(h,2)),c=0!==this._dataSeries.cachedPoints[o].Value?(this._dataSeries.cachedPoints[n].Value-this._dataSeries.cachedPoints[o].Value)/this._dataSeries.cachedPoints[o].Value*100:0,u=r.BigNumber.subtract(this._dataSeries.cachedPoints[l].Timestamp,this._dataSeries.cachedPoints[n].Timestamp),m=r.BigNumber.add(this._dataSeries.cachedPoints[n].Timestamp,r.BigNumber.divideNumber(u,2)),g=0!==this._dataSeries.cachedPoints[n].Value?(this._dataSeries.cachedPoints[l].Value-this._dataSeries.cachedPoints[n].Value)/this._dataSeries.cachedPoints[n].Value*100:0;let p,_;switch(t){case a.PointToFind.LessThanOrEqual:p=c,_=d;break;case a.PointToFind.GreaterThanOrEqual:p=g,_=m;break;case a.PointToFind.Nearest:e.greaterOrEqual(this._dataSeries.cachedPoints[n].Timestamp)?(p=g,_=m):(p=c,_=d)}return p>this.maxValue?{value:this.maxValue,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipTooLarge,(this.maxValue/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}:p<this.minValue?{value:this.minValue,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipTooSmall,(this.minValue/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}:{value:p,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipValue,(p/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}}draw(e,t){if(0===this._dataSeries.cachedPoints.length||t.gridX.elapsed.equals(r.BigNumber.zero)||t.chartRect.width<=0)return;this._dataSeries.sampleCount=Math.round(t.chartRect.width/2);const i=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);e.save(),e.lineWidth=1;const n=a(0);let o=i(this._dataSeries.cachedPoints[0].Timestamp),l=this._dataSeries.cachedPoints[0].Value;this._dataSeries.cachedPoints.forEach((t=>{const s=i(t.Timestamp),r=0!==l?(t.Value-l)/l*100:0,h=Math.floor(a(r)-n),d=h<0?"rgb(113,178,82)":"rgb(191,63,0)";e.fillStyle=d,e.strokeStyle=d,e.fillRect(o,n,s-o,h),o=s,l=t.Value})),e.strokeStyle=this._graphStrokeColor,e.setLineDash([1,1]),e.beginPath(),e.moveTo(0,n),e.lineTo(t.chartRect.width,n),e.stroke(),e.restore()}onThemeChanged(){this._graphStrokeColor=i.Theme.getValue("diagnostics-host-graph-line")}}}.apply(t,a),void 0===s||(e.exports=s)},8610:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o,l,h){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class d{constructor(e,t,i){this._logger=l.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._colorScheme=new n.ChartColorScheme("#92AB00","#AECD00"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*d.PointRadiusInPixels+"px",this._marker.style.height=2*d.PointRadiusInPixels+"px",this._sampledDataSeries=e,this._enabledAtStart=t,o.loadDataWarehouse().then((e=>{const t={customDomain:{CounterId:d.counterId}};return e.getFilteredData(t,d.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"DotNetAlloc.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._sampledDataSeries.cachedPoints.length||0===this._toggleEvents.length&&!this._enabledAtStart)return null;let i={Timestamp:e,Value:0};const n=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=s.Utilities.findLessThan(this._toggleEvents,i,n);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this.getPointIndex(this._sampledDataSeries.cachedPoints,i.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,t);return i=this._sampledDataSeries.cachedPoints[o],{timestamp:i.Timestamp,tooltip:this._tooltip,value:i.Value,color:this._colorScheme}}onDataUpdate(e){this.requestUpdate()}draw(e,t){if(0===this._sampledDataSeries.cachedPoints.length||0===t.chartRect.width)return;let i=0,s=this._sampledDataSeries.cachedPoints.length-1,n=this._enabledAtStart;e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor,this._toggleEvents.forEach((r=>{r.Value>.5?(i=this.getPointIndex(this._sampledDataSeries.cachedPoints,r.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,a.PointToFind.Nearest),n=!0):(s=this.getPointIndex(this._sampledDataSeries.cachedPoints,r.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,a.PointToFind.Nearest),n=!1,this.drawBetween(e,t,i,s))})),n&&(s=this._sampledDataSeries.cachedPoints.length-1,this.drawBetween(e,t,i,s)),e.restore()}drawBetween(e,t,i,a){const n=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),r=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.beginPath();for(let t=i;t<=a;++t)e.lineTo(r(this._sampledDataSeries.cachedPoints[t].Timestamp),n(this._sampledDataSeries.cachedPoints[t].Value));e.stroke(),e.lineTo(r(this._sampledDataSeries.cachedPoints[a].Timestamp),n(t.gridY.min)),e.lineTo(r(this._sampledDataSeries.cachedPoints[i].Timestamp),t.chartRect.height),e.closePath(),e.fill();const o=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(h.BigNumber.convertFromNumber(d.CounterFrequencyPerPixel).greater(o))for(let t=i;t<=a;++t)e.beginPath(),e.arc(r(this._sampledDataSeries.cachedPoints[t].Timestamp),n(this._sampledDataSeries.cachedPoints[t].Value),d.PointRadiusInPixels,0,2*Math.PI),e.fill()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new h.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,n,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),l={Timestamp:t,Value:0};switch(r){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(e,l,o,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(e,l,o,i,n);case a.PointToFind.Nearest:default:{i=s.Utilities.findLessThan(e,l,o),n=Math.min(i+1,e.length-1);const a=h.BigNumber.subtract(t,e[i].Timestamp),r=h.BigNumber.subtract(e[n].Timestamp,t);return a.greater(r)?n:i}}}}t.EnabledDataSeries=d,d.PointRadiusInPixels=2.5,d.CounterFrequencyPerPixel=1e8/(2*d.PointRadiusInPixels+4)}.apply(t,a),void 0===s||(e.exports=s)},3672:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117),i(8117),i(952),i(3766)],s=function(e,t,i,a,s,n,r,o,l,h,d,c,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class m{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._samples=200,this._timestamps=[],this._currentResult=null,this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._marshaler=new u.DotNetObjectAllocMarshaler,this._onHighlightChangedHandler=this.onHighlightChanged.bind(this),this._newDataEvent=new r.AggregatedEvent,this._viewEventManager=h.getViewEventManager(),this._colorScheme=new n.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._sampledDataSeries=e,this._currentTimespan=t,this._marshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._viewEventManager.detailsViewSelectionChanged.addEventListener(void this._marshaler.clearGraphHighlight),o.loadDataWarehouse().then((e=>{const t={timeDomain:this._currentTimespan,customDomain:{view:"Timestamps"}};e.getFilteredData(t,c.DotNetAllocAnalyzerId()).then((e=>{this._currentResult=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}))}))}onHighlightChanged(e){this._typeId=null===e?-1:e.typeId,this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._marshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._viewEventManager.detailsViewSelectionChanged.removeEventListener(void this._marshaler.clearGraphHighlight),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._timestamps.length||t.gridX.elapsed.equals(d.BigNumber.zero)||t.chartRect.width<=0)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),n=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((s=>{const r=i(s),o=this.getDataSeriesPointAtTimestamp(s,a.PointToFind.LessThanOrEqual),l=this.getDataSeriesPointAtTimestamp(s,a.PointToFind.GreaterThanOrEqual);if(!o||!l)return;const h=i(o.timestamp),d=n(o.value),c=i(l.timestamp),u=n(l.value),m={x:r,y:n(t.gridY.max)};if(h!==c){const e=(u-d)/(c-h);m.y=d+e*(r-h)}e.beginPath(),e.moveTo(m.x+.5,n(t.gridY.min)),e.lineTo(m.x+.5,m.y),e.stroke(),e.closePath()})),e.restore()}getDataSeriesPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._sampledDataSeries.cachedPoints.length)return null;const i=this._sampledDataSeries.getIndexOfTimestamp(e,t),s=this._sampledDataSeries.cachedPoints[i];return{timestamp:s.Timestamp,tooltip:null,value:s.Value}}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(d.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=d.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=d.BigNumber.subtract(this._currentTimespan.begin,d.BigNumber.min(e,this._currentTimespan.begin)),a=d.BigNumber.multiply(d.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),s=d.BigNumber.add(a,d.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n=this._currentResult,r=this._typeId;Promise.resolve(null!==n).then((e=>e?r<0?m.EmptyOccurrencesDto:n.getResult({task:"getTimestamps",typeId:r,begin:a.jsonValue,end:s.jsonValue,samples:Math.max(this._samples,1)}):(this._droppedRequest=!0,m.EmptyOccurrencesDto))).then((e=>{this._timestamps=e.timestamps.map((e=>new d.BigNumber(e.h,e.l))),this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}getOccurrencePointIndex(e,t,i,n,r){const o=(e,t)=>t.greater(e);switch(r){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(e,t,o,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(e,t,o,i,n);case a.PointToFind.Nearest:default:{i=s.Utilities.findLessThan(e,t,o),n=Math.min(i+1,e.length-1);const a=d.BigNumber.subtract(t,e[i]),r=d.BigNumber.subtract(e[n],t);return a.greater(r)?n:i}}}}t.HighlightDataSeries=m,m.EmptyOccurrencesDto={timestamps:[]}}.apply(t,a),void 0===s||(e.exports=s)},1497:(e,t,i)=>{var a,s;a=[i,t,i(5226),i(2560),i(2560),i(2560),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LineChartSeries=void 0;class l{constructor(e,t,i,a){this._newDataEvent=new r.AggregatedEvent,this._dataSeries=e,this._title=i,this._tooltip=a,this._unitConverter=t,this._colorScheme=new n.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*l.PointRadiusInPixels+"px",this._marker.style.height=2*l.PointRadiusInPixels+"px",this._onNewDataBoundFunction=()=>this._newDataEvent.invokeEvent(this),this._dataSeries.newDataEvent.addEventListener(this._onNewDataBoundFunction)}get minValue(){return this._dataSeries.minValue}get maxValue(){return this._dataSeries.maxValue}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._dataSeries.newDataEvent.removeEventListener(this._onNewDataBoundFunction),this._newDataEvent.dispose(),this._dataSeries.dispose()}onViewportChanged(e){this._dataSeries.onViewportChanged(e)}onDataUpdate(e){this._dataSeries.onDataUpdate(e)}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._dataSeries.cachedPoints.length)return null;const s=this._dataSeries.getIndexOfTimestamp(e,t),n=this._dataSeries.cachedPoints[s];return{timestamp:n.Timestamp,tooltip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(n.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabelNumberWithUnit"),null,!0)),value:n.Value}}draw(e,t){if(0===this._dataSeries.cachedPoints.length||t.gridX.elapsed.equals(o.BigNumber.zero)||t.chartRect.width<=0)return;this._dataSeries.sampleCount=Math.round(t.chartRect.width/2);const i=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),a=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const n=a(this._dataSeries.cachedPoints[0].Timestamp);e.beginPath(),e.moveTo(n,i(this._dataSeries.cachedPoints[0].Value)),this._dataSeries.cachedPoints.forEach((t=>e.lineTo(a(t.Timestamp),i(t.Value)))),e.stroke(),e.lineTo(a(this._dataSeries.cachedPoints[this._dataSeries.cachedPoints.length-1].Timestamp),i(t.gridY.min)),e.lineTo(n,t.chartRect.height),e.closePath(),e.fill();const r=o.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);o.BigNumber.convertFromNumber(l.CounterFrequencyPerPixel).greater(r)&&this._dataSeries.cachedPoints.forEach((t=>{e.beginPath(),e.arc(a(t.Timestamp),i(t.Value),l.PointRadiusInPixels,0,2*Math.PI),e.fill()})),e.restore()}}t.LineChartSeries=l,l.PointRadiusInPixels=2.5,l.CounterFrequencyPerPixel=1e8/(2*l.PointRadiusInPixels+4)}.apply(t,a),void 0===s||(e.exports=s)},1431:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SampledDataSeries=void 0;class h{constructor(e){this._logger=o.getLogger("SampledDataSeries"),this._samples=200,this._cachedPoints=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new n.AggregatedEvent,this._currentTimespan=e,r.loadDataWarehouse().then((e=>e.getFilteredData({customDomain:{Task:"GetCounter",CounterId:"DotNetAlloc.Counters.LiveObjects"}},h.analyzerId))).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get newDataEvent(){return this._newDataEvent}get cachedPoints(){return this._cachedPoints}get sampleCount(){return this._samples}set sampleCount(e){this._samples!==e&&(this._samples=e,this.requestUpdate())}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.length;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this._cachedPoints[t-1].Timestamp))&&this.requestUpdate()}getIndexOfTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cachedPoints.length)return null;const i={Timestamp:e,Value:0},n=(e,t)=>t.Timestamp.greater(e.Timestamp);switch(t){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(this._cachedPoints,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(this._cachedPoints,i,n);case a.PointToFind.Nearest:default:{const t=s.Utilities.findLessThan(this._cachedPoints,i,n),a=Math.min(t+1,this._cachedPoints.length-1),r=l.BigNumber.subtract(e,this._cachedPoints[t].Timestamp),o=l.BigNumber.subtract(this._cachedPoints[a].Timestamp,e);return r.greater(o)?a:t}}}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(l.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=l.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=l.BigNumber.subtract(this._currentTimespan.begin,l.BigNumber.min(e,this._currentTimespan.begin)),a=l.BigNumber.multiply(l.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),s=l.BigNumber.add(a,l.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n={type:"SamplePoints",begin:a.jsonValue,end:s.jsonValue,samples:this._samples};this._countersResult.getResult(n).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){this._cachedPoints=e.p.map((e=>{const t=new l.BigNumber(e.t.h,e.t.l);return this._seriesMin=Math.min(this._seriesMin,e.v),this._seriesMax=Math.max(this._seriesMax,e.v),{Timestamp:t,Value:e.v,ToolTip:e.tt}})),this._newDataEvent.invokeEvent(null)}}t.SampledDataSeries=h}.apply(t,a),void 0===s||(e.exports=s)},6701:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(4557),i(1431),i(1497),i(3672),i(8610)],s=function(e,t,i,a,s,n,r,o,l,h,d,c,u,m,g){"use strict";let p;function _(e){return p||(p=new c.SampledDataSeries(e)),p}function v(e,t,d,c,p,v){const S=new o.SwimlaneConfiguration(e,p,c),T=S.graph,w=new i.LocalizedUnitConverter(T.jsonConfig.Units,T.resources),C=[];C.push(new u.LineChartSeries(_(p),w,T.resources.LiveObjectLineSeries));const b=new g.EnabledDataSeries(_(p),T.jsonConfig.EnabledAtStart,T.resources.ProfilingEnabled);if(C.push(b),T.jsonConfig.IsAnalysis){const e=new m.HighlightDataSeries(_(p),T.timeRange,T.resources.LiveObjectCurrentType);C.push(e)}const E=new h.MultiSeriesGraph(T,C);S.header.isBodyExpanded=t,S.header.unit=T.unit,E.container.setAttribute("aria-label",e.Title);const P=new n.Scale(T.scale,a.ScaleType.Left,w),D=new n.Scale(T.scale,a.ScaleType.Right,w);E.scaleChangedEvent.addEventListener(P.onScaleChanged.bind(P)),E.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D));const R=new s.SwimlaneBase(S.header,T.height,p,v);return E.scaleChangedEvent.addEventListener(R.onScaleChanged.bind(R)),d?R.addMainRegionControl(new r.SelectionOverlay(E,p,v,S.id)):R.addMainRegionControl(E),R.addMainRegionControl(new l.GridLineRenderer(p)),R.addLeftRegionControl(P),R.addRightRegionControl(D),R}function S(e,t,c,u,m,g){const p=new o.SwimlaneConfiguration(e,m,u),v=p.graph,S=new i.LocalizedUnitConverter(v.jsonConfig.Units,v.resources),T=[new d.DeltaChartSeries(_(m),v.resources)],w=new h.MultiSeriesGraph(v,T);p.header.isBodyExpanded=t,p.header.unit=v.unit,w.container.setAttribute("aria-label",e.Title);const C=new n.Scale(v.scale,a.ScaleType.Left,S),b=new n.Scale(v.scale,a.ScaleType.Right,S);w.scaleChangedEvent.addEventListener(C.onScaleChanged.bind(C)),w.scaleChangedEvent.addEventListener(b.onScaleChanged.bind(b));const E=new s.SwimlaneBase(p.header,v.height,m,g);return w.scaleChangedEvent.addEventListener(E.onScaleChanged.bind(E)),c?E.addMainRegionControl(new r.SelectionOverlay(w,m,g,p.id)):E.addMainRegionControl(w),E.addMainRegionControl(new l.GridLineRenderer(m)),E.addLeftRegionControl(C),E.addRightRegionControl(b),E}function T(e,t,d,c,u,m){const g=new o.SwimlaneConfiguration(e,u,c),p=g.graph,_=new i.LocalizedUnitConverter(p.jsonConfig.Units,p.resources),v=new h.MultiSeriesGraph(p);g.header.isBodyExpanded=t,g.header.unit=p.unit,v.container.setAttribute("aria-label",e.Title);const S=new n.Scale(p.scale,a.ScaleType.Left,_),T=new n.Scale(p.scale,a.ScaleType.Right,_);v.scaleChangedEvent.addEventListener(S.onScaleChanged.bind(S)),v.scaleChangedEvent.addEventListener(T.onScaleChanged.bind(T));const w=new s.SwimlaneBase(g.header,p.height,u,m);return v.scaleChangedEvent.addEventListener(w.onScaleChanged.bind(w)),d?w.addMainRegionControl(new r.SelectionOverlay(v,u,m,g.id)):w.addMainRegionControl(v),w.addMainRegionControl(new l.GridLineRenderer(u)),w.addLeftRegionControl(S),w.addRightRegionControl(T),w}Object.defineProperty(t,"__esModule",{value:!0}),t.PrivateBytesSwimlaneFactory=t.DeltaAllocSwimlaneFactory=t.LiveObjectSwimlaneFactory=void 0,t.LiveObjectSwimlaneFactory=v,t.DeltaAllocSwimlaneFactory=S,t.PrivateBytesSwimlaneFactory=T,window.LiveObjectSwimlaneFactory=v,window.DeltaAllocSwimlaneFactory=S,window.PrivateBytesSwimlaneFactory=T}.apply(t,a),void 0===s||(e.exports=s)},8117:t=>{"use strict";t.exports=e},2560:e=>{"use strict";e.exports=t},5226:e=>{"use strict";e.exports=i}},s={},function e(t){var i=s[t];if(void 0!==i)return i.exports;var n=s[t]={exports:{}};return a[t](n,n.exports,e),n.exports}(6701);var a,s}));
// SIG // Begin signature block
// SIG // MIIoNwYJKoZIhvcNAQcCoIIoKDCCKCQCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // ObLSqAHMJVVCQ2hnkohVBQ/x4IiQ3TkQBc7hyYEXYZeg
// SIG // gg2FMIIGAzCCA+ugAwIBAgITMwAABAO91ZVdDzsYrQAA
// SIG // AAAEAzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTI0MDkxMjIwMTExM1oX
// SIG // DTI1MDkxMTIwMTExM1owdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // n3RnXcCDp20WFMoNNzt4s9fV12T5roRJlv+bshDfvJoM
// SIG // ZfhyRnixgUfGAbrRlS1St/EcXFXD2MhRkF3CnMYIoeMO
// SIG // MuMyYtxr2sC2B5bDRMUMM/r9I4GP2nowUthCWKFIS1RP
// SIG // lM0YoVfKKMaH7bJii29sW+waBUulAKN2c+Gn5znaiOxR
// SIG // qIu4OL8f9DCHYpME5+Teek3SL95sH5GQhZq7CqTdM0fB
// SIG // w/FmLLx98SpBu7v8XapoTz6jJpyNozhcP/59mi/Fu4tT
// SIG // 2rI2vD50Vx/0GlR9DNZ2py/iyPU7DG/3p1n1zluuRp3u
// SIG // XKjDfVKH7xDbXcMBJid22a3CPbuC2QJLowIDAQABo4IB
// SIG // gjCCAX4wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFOpuKgJKc+OuNYitoqxfHlrE
// SIG // gXAZMFQGA1UdEQRNMEukSTBHMS0wKwYDVQQLEyRNaWNy
// SIG // b3NvZnQgSXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQx
// SIG // FjAUBgNVBAUTDTIzMDAxMis1MDI5MjYwHwYDVR0jBBgw
// SIG // FoAUSG5k5VAF04KqFzc3IrVtqMp1ApUwVAYDVR0fBE0w
// SIG // SzBJoEegRYZDaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
// SIG // L3BraW9wcy9jcmwvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNybDBhBggrBgEFBQcBAQRVMFMwUQYIKwYB
// SIG // BQUHMAKGRWh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9w
// SIG // a2lvcHMvY2VydHMvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNydDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQBRaP+hOC1+dSKhbqCr1LIvNEMrRiOQ
// SIG // EkPc7D6QWtM+/IbrYiXesNeeCZHCMf3+6xASuDYQ+AyB
// SIG // TX0YlXSOxGnBLOzgEukBxezbfnhUTTk7YB2/TxMUcuBC
// SIG // P45zMM0CVTaJE8btloB6/3wbFrOhvQHCILx41jTd6kUq
// SIG // 4bIBHah3NG0Q1H/FCCwHRGTjAbyiwq5n/pCTxLz5XYCu
// SIG // 4RTvy/ZJnFXuuwZynowyju90muegCToTOwpHgE6yRcTv
// SIG // Ri16LKCr68Ab8p8QINfFvqWoEwJCXn853rlkpp4k7qzw
// SIG // lBNiZ71uw2pbzjQzrRtNbCFQAfmoTtsHFD2tmZvQIg1Q
// SIG // VkzM/V1KCjHL54ItqKm7Ay4WyvqWK0VIEaTbdMtbMWbF
// SIG // zq2hkRfJTNnFr7RJFeVC/k0DNaab+bpwx5FvCUvkJ3z2
// SIG // wfHWVUckZjEOGmP7cecefrF+rHpif/xW4nJUjMUiPsyD
// SIG // btY2Hq3VMLgovj+qe0pkJgpYQzPukPm7RNhbabFNFvq+
// SIG // kXWBX/z/pyuo9qLZfTb697Vi7vll5s/DBjPtfMpyfpWG
// SIG // 0phVnAI+0mM4gH09LCMJUERZMgu9bbCGVIQR7cT5YhlL
// SIG // t+tpSDtC6XtAzq4PJbKZxFjpB5wk+SRJ1gm87olbfEV9
// SIG // SFdO7iL3jWbjgVi1Qs1iYxBmvh4WhLWr48uouzCCB3ow
// SIG // ggVioAMCAQICCmEOkNIAAAAAAAMwDQYJKoZIhvcNAQEL
// SIG // BQAwgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
// SIG // aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
// SIG // ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xMjAwBgNVBAMT
// SIG // KU1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhv
// SIG // cml0eSAyMDExMB4XDTExMDcwODIwNTkwOVoXDTI2MDcw
// SIG // ODIxMDkwOVowfjELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYG
// SIG // A1UEAxMfTWljcm9zb2Z0IENvZGUgU2lnbmluZyBQQ0Eg
// SIG // MjAxMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
// SIG // ggIBAKvw+nIQHC6t2G6qghBNNLrytlghn0IbKmvpWlCq
// SIG // uAY4GgRJun/DDB7dN2vGEtgL8DjCmQawyDnVARQxQtOJ
// SIG // DXlkh36UYCRsr55JnOloXtLfm1OyCizDr9mpK656Ca/X
// SIG // llnKYBoF6WZ26DJSJhIv56sIUM+zRLdd2MQuA3WraPPL
// SIG // bfM6XKEW9Ea64DhkrG5kNXimoGMPLdNAk/jj3gcN1Vx5
// SIG // pUkp5w2+oBN3vpQ97/vjK1oQH01WKKJ6cuASOrdJXtjt
// SIG // 7UORg9l7snuGG9k+sYxd6IlPhBryoS9Z5JA7La4zWMW3
// SIG // Pv4y07MDPbGyr5I4ftKdgCz1TlaRITUlwzluZH9TupwP
// SIG // rRkjhMv0ugOGjfdf8NBSv4yUh7zAIXQlXxgotswnKDgl
// SIG // mDlKNs98sZKuHCOnqWbsYR9q4ShJnV+I4iVd0yFLPlLE
// SIG // tVc/JAPw0XpbL9Uj43BdD1FGd7P4AOG8rAKCX9vAFbO9
// SIG // G9RVS+c5oQ/pI0m8GLhEfEXkwcNyeuBy5yTfv0aZxe/C
// SIG // HFfbg43sTUkwp6uO3+xbn6/83bBm4sGXgXvt1u1L50kp
// SIG // pxMopqd9Z4DmimJ4X7IvhNdXnFy/dygo8e1twyiPLI9A
// SIG // N0/B4YVEicQJTMXUpUMvdJX3bvh4IFgsE11glZo+TzOE
// SIG // 2rCIF96eTvSWsLxGoGyY0uDWiIwLAgMBAAGjggHtMIIB
// SIG // 6TAQBgkrBgEEAYI3FQEEAwIBADAdBgNVHQ4EFgQUSG5k
// SIG // 5VAF04KqFzc3IrVtqMp1ApUwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAUci06AjGQQ7kUBU7h
// SIG // 6qfHMdEjiTQwWgYDVR0fBFMwUTBPoE2gS4ZJaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNy
// SIG // bDBeBggrBgEFBQcBAQRSMFAwTgYIKwYBBQUHMAKGQmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNydDCB
// SIG // nwYDVR0gBIGXMIGUMIGRBgkrBgEEAYI3LgMwgYMwPwYI
// SIG // KwYBBQUHAgEWM2h0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2lvcHMvZG9jcy9wcmltYXJ5Y3BzLmh0bTBABggr
// SIG // BgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBwAG8AbABp
// SIG // AGMAeQBfAHMAdABhAHQAZQBtAGUAbgB0AC4gHTANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAZ/KGpZjgVHkaLtPYdGcimwuW
// SIG // EeFjkplCln3SeQyQwWVfLiw++MNy0W2D/r4/6ArKO79H
// SIG // qaPzadtjvyI1pZddZYSQfYtGUFXYDJJ80hpLHPM8QotS
// SIG // 0LD9a+M+By4pm+Y9G6XUtR13lDni6WTJRD14eiPzE32m
// SIG // kHSDjfTLJgJGKsKKELukqQUMm+1o+mgulaAqPyprWElj
// SIG // HwlpblqYluSD9MCP80Yr3vw70L01724lruWvJ+3Q3fMO
// SIG // r5kol5hNDj0L8giJ1h/DMhji8MUtzluetEk5CsYKwsat
// SIG // ruWy2dsViFFFWDgycScaf7H0J/jeLDogaZiyWYlobm+n
// SIG // t3TDQAUGpgEqKD6CPxNNZgvAs0314Y9/HG8VfUWnduVA
// SIG // KmWjw11SYobDHWM2l4bf2vP48hahmifhzaWX0O5dY0Hj
// SIG // Wwechz4GdwbRBrF1HxS+YWG18NzGGwS+30HHDiju3mUv
// SIG // 7Jf2oVyW2ADWoUa9WfOXpQlLSBCZgB/QACnFsZulP0V3
// SIG // HjXG0qKin3p6IvpIlR+r+0cjgPWe+L9rt0uX4ut1eBrs
// SIG // 6jeZeRhL/9azI2h15q/6/IvrC4DqaTuv/DDtBEyO3991
// SIG // bWORPdGdVk5Pv4BXIqF4ETIheu9BCrE/+6jMpF3BoYib
// SIG // V3FWTkhFwELJm3ZbCoBIa/15n8G9bW1qyVJzEw16UM0x
// SIG // ghoKMIIaBgIBATCBlTB+MQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5n
// SIG // IFBDQSAyMDExAhMzAAAEA73VlV0POxitAAAAAAQDMA0G
// SIG // CWCGSAFlAwQCAQUAoIGuMBkGCSqGSIb3DQEJAzEMBgor
// SIG // BgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEE
// SIG // AYI3AgEVMC8GCSqGSIb3DQEJBDEiBCAT7bj7FnB5qYfn
// SIG // NKLvqQlZlBpN6wo/LtmzyM6kOErL8jBCBgorBgEEAYI3
// SIG // AgEMMTQwMqAUgBIATQBpAGMAcgBvAHMAbwBmAHShGoAY
// SIG // aHR0cDovL3d3dy5taWNyb3NvZnQuY29tMA0GCSqGSIb3
// SIG // DQEBAQUABIIBAIvep1/fPcJfl0lRpZmi2DRT1pP+SMdy
// SIG // OyaN3bp+45ddKAL+YhqHqWxziTH9rD0bGpWKHBJSZfk6
// SIG // RtUsLZiwW2cht9LCHvFijA2z4vzkdbctj5WuuVvV85W4
// SIG // hyvTgsz92m7D8TCmMpfltextg/s5dSysWjPpTPpxEN0O
// SIG // XsAcWlumUA+DsapppH33fVHclqQcaYNrxRoLgSr7PE0T
// SIG // NNc9UaFOLLJ/apQW/tcB1NaZswOfOm1ttaARgyKZc5YR
// SIG // p32pquB3lBvO0uuW809oGzmEdy1CbtOxAnHgJmQ4kat1
// SIG // Q3hmG6Zoj891rv/ZhyU2k0QX6VTirpjGGKV+29pSizpH
// SIG // OAqhgheUMIIXkAYKKwYBBAGCNwMDATGCF4Awghd8Bgkq
// SIG // hkiG9w0BBwKgghdtMIIXaQIBAzEPMA0GCWCGSAFlAwQC
// SIG // AQUAMIIBUgYLKoZIhvcNAQkQAQSgggFBBIIBPTCCATkC
// SIG // AQEGCisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQg
// SIG // jnihCaZHc2RZtK9Ho6g2+0tZ11NMvUYw2R3b4kaV2wEC
// SIG // BmhLS49ZmxgTMjAyNTA2MzAxNDQ2NDMuMTE3WjAEgAIB
// SIG // 9KCB0aSBzjCByzELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMG
// SIG // A1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9u
// SIG // czEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNOOkUwMDIt
// SIG // MDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGlt
// SIG // ZS1TdGFtcCBTZXJ2aWNloIIR6jCCByAwggUIoAMCAQIC
// SIG // EzMAAAILEZ1WKZL5v4UAAQAAAgswDQYJKoZIhvcNAQEL
// SIG // BQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
// SIG // bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
// SIG // FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcN
// SIG // MjUwMTMwMTk0MjU4WhcNMjYwNDIyMTk0MjU4WjCByzEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9z
// SIG // b2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMe
// SIG // blNoaWVsZCBUU1MgRVNOOkUwMDItMDVFMC1EOTQ3MSUw
// SIG // IwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
// SIG // aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
// SIG // AgEAqqz4rUYwF6hYdiB80GA97spAz8iRfu/XuQpGOGmL
// SIG // G/d0Fbp+H2dybv9Fh67QBdybMEogFZe6dR9sxSq78oWl
// SIG // bkWHEnO2Lsj9BhxFau2FUubhd2C5S3qMhjjyklxrOmoF
// SIG // utAqlQYT0Ptp+PXumA/cBr+mNB5gSpp0KmPwCiYo4FIk
// SIG // bpW9aLzRHE2ZkzUbtZmPtCY4hLrPnheulTaAb9WtjFtC
// SIG // T2GxQYT8xR5XXRV3I39qiJG+QWFrBS+0JQY1wKX9h5ja
// SIG // z8xt+oNcm6Pyp0Y0oCEaR3mF8QSGghBrUdRJqSfdDkhR
// SIG // 8VLu3iI1X3p6p1bWoNMgEGO8xFklzDevgh4790gTbZuW
// SIG // SEcsgrFGRvOOeCvvOuW8OxcLh/L5OUPtOyuZRWNNngQ8
// SIG // N1Cs1o1r6k6dqSvDE2uJKM75SoK0hqebIeexp5I5bzb7
// SIG // e/DV22U1SK8Eu8XCBo270v9q+ZUQ0/kNz9rU/oOigz3S
// SIG // 57ZXGxXR7rs8icsdFnwq/Mx7/MBggd6jzm0VyuKKQCJ0
// SIG // kOI+YktvCgEyRsEGm0bnmb4b3fTndMHBWDm+KK1L9XQ+
// SIG // V8BcipRgzzHEzzkK9IMZhEFay4iRKC8slvBFf2gxVF06
// SIG // McoX81meg3NJfXnrYdRLdjUNwP6gUecd96YynRyVSeca
// SIG // adgCN2czWCwwqjtZbYc9Rmks/j0CAwEAAaOCAUkwggFF
// SIG // MB0GA1UdDgQWBBRmXCyI36/pelnjLoRPYLMXvfI//jAf
// SIG // BgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBf
// SIG // BgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBU
// SIG // aW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYI
// SIG // KwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01p
// SIG // Y3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEw
// SIG // KDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQM
// SIG // MAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAmij1Z+hi3J5GzxHTNEfauGZt
// SIG // PuyXxtOfqZqj+pwOEsE9upPR5SUI6sP/lpIkCw+KMCca
// SIG // KCK/TA2W4mV+sqT4RfoNT+bvAThFz2GJDlqcxRi0S7ZW
// SIG // R738aagCGu5oyxhw8yq/9dNgF2g+JhsnRMGixoVJ/QwR
// SIG // nTJuXYYorFgKm/yzeJZuDrl+GC6inFv9MknByoKaxoC2
// SIG // Puqar9Mz1O+I+3gq/jw0zWDPLRSf27VJwTS8jhOFmcAS
// SIG // KuLZ7143dnAjrYFJ6EIxVNWWO2VnZ8twSW394Qa29zQd
// SIG // iFOJ7uttrVa29XzZMHb0+dNVkVATHfaBX+MYn49o9gpW
// SIG // 79VxpY15nesiY77fmwbryS1LnPZvrzCjlskcFHbzpfxO
// SIG // WvM1dzK4wp2OnyKy0DcwTmepJSAjwovthqm1YjNAiOgm
// SIG // 2cqXouUa/YSWx/K2RM42mFi56/1z7FNMK9k5+i/XScdq
// SIG // vywKCvqL4gCJ49Gj+IkazMlEjuii9isGOsyXOkg8Wx5M
// SIG // GB3UEazzT90rrTIOi4AUr7Zn6sIGlyB5AqIlBRAM/XBi
// SIG // Kr4IxqRqaSk3E7qKNxBIKf80XdMMVtEKpld8oGBonHp9
// SIG // 9CgFh6yhQvEm8HOqguKaHVWWCWZoqxwT/7qO7EJ3uR9M
// SIG // bXbw5lw1H8uYDYy5Y0CFLCYUEssl20o0m9muY4TlH8cw
// SIG // ggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAV
// SIG // MA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0
// SIG // aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAx
// SIG // ODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEF
// SIG // AAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7V
// SIG // gtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/H
// SIG // ZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKD
// SIG // RLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gm
// SIG // U3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36M
// SIG // EBydUv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+y
// SIG // OSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoF
// SIG // VZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJi
// SIG // ss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGa
// SIG // RnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+Autuqfjbs
// SIG // Nkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afo
// SIG // mXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9
// SIG // ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZk
// SIG // i1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y
// SIG // 1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV
// SIG // 2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0C
// SIG // AwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEw
// SIG // IwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/
// SIG // LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnp
// SIG // cjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8G
// SIG // CCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYD
// SIG // VR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9
// SIG // lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoG
// SIG // CCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcN
// SIG // AQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pc
// SIG // FLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHk
// SIG // wo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AF
// SIG // vonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4
// SIG // U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2
// SIG // EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8Atq
// SIG // gcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mj
// SIG // dAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZM
// SIG // cm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQE
// SIG // cb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2f
// SIG // pCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBM
// SIG // drVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L
// SIG // +DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJ
// SIG // C4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU
// SIG // 5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/
// SIG // 2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIDTTCC
// SIG // AjUCAQEwgfmhgdGkgc4wgcsxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xJTAjBgNVBAsTHE1pY3Jvc29mdCBBbWVyaWNhIE9w
// SIG // ZXJhdGlvbnMxJzAlBgNVBAsTHm5TaGllbGQgVFNTIEVT
// SIG // TjpFMDAyLTA1RTAtRDk0NzElMCMGA1UEAxMcTWljcm9z
// SIG // b2Z0IFRpbWUtU3RhbXAgU2VydmljZaIjCgEBMAcGBSsO
// SIG // AwIaAxUAqEJ3VCTdz6atsYfEYbbEd+TQmcGggYMwgYCk
// SIG // fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1N
// SIG // aWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkq
// SIG // hkiG9w0BAQsFAAIFAOwM2s0wIhgPMjAyNTA2MzAwOTQz
// SIG // NDFaGA8yMDI1MDcwMTA5NDM0MVowdDA6BgorBgEEAYRZ
// SIG // CgQBMSwwKjAKAgUA7AzazQIBADAHAgEAAgIFADAHAgEA
// SIG // AgITLDAKAgUA7A4sTQIBADA2BgorBgEEAYRZCgQCMSgw
// SIG // JjAMBgorBgEEAYRZCgMCoAowCAIBAAIDB6EgoQowCAIB
// SIG // AAIDAYagMA0GCSqGSIb3DQEBCwUAA4IBAQBu+KHPZcSE
// SIG // Brwe0KqX9cZUCR2NoGbv/hCAiTP/kXUVxEZVvWOfGUH7
// SIG // E0odNLwKWV2cwR4+Ynhy2MJcYR4BoWQOH2cBIl4Vd0gu
// SIG // wVFM/SGc460JETkofrkDtomg9GqK51uQ06bzgfpQI8vu
// SIG // KAj4MNxRhdq3t823VT6jlA1O476VNqQ3mhWl3e4Zd530
// SIG // MQiQCpp4sgYkRM8r8tRIPy48+Nx0kqiqg+SljvP7JBdv
// SIG // 4R11CslkSpYz5CIlAwxuJZcHaYloUf5GSGHUXqr1HLcC
// SIG // VlMJEkDVrb6WSkfxXK1Pb3jHPVgNqVXrcs4PC6iOqP+2
// SIG // oEnU4ulVjLdMsNy/qGK/HaYrMYIEDTCCBAkCAQEwgZMw
// SIG // fDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWlj
// SIG // cm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMAAAIL
// SIG // EZ1WKZL5v4UAAQAAAgswDQYJYIZIAWUDBAIBBQCgggFK
// SIG // MBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkq
// SIG // hkiG9w0BCQQxIgQgNIWyI7WMWP+FO9Mox5Mj6OOF7IaX
// SIG // D9L8kLyQDTbIGsswgfoGCyqGSIb3DQEJEAIvMYHqMIHn
// SIG // MIHkMIG9BCA01XSruje+24dMHTshfqIETfLyiXMOY539
// SIG // vxLrLGJKMzCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1w
// SIG // IFBDQSAyMDEwAhMzAAACCxGdVimS+b+FAAEAAAILMCIE
// SIG // IPNDobPLsLS5vlrrvT4zShQ00J/fpPzY6Mjs3o1g53jR
// SIG // MA0GCSqGSIb3DQEBCwUABIICAFQ7J5QgWZPvH+aMk7Fa
// SIG // 02E+OoPqCglvNkdNlsGnbJIZXZ6oHysq55UVPivsgXxE
// SIG // Zrh6TVyYrHVLZjuhWT1ar+i9Aa31k4mauKI4y/RMDhdI
// SIG // J4wxp0Qb50APwV4LWBxwdXxrdlrb8wzs5HJsOmFhJfnT
// SIG // p9lrDoyeOPA1NRbu37wMgVMWgHF6xrOfsHccKctnmKWi
// SIG // lzDFFm9VJDAXIKYpQk9+EA2mnQXsUPIb4BHP2RTGA5Tm
// SIG // V0xTIIrw5j/lkeA2sGeQsKxnYbayt02P8G2b75MAyvTy
// SIG // ysyWGHeO7Zh59/jPDtWU5w9vsYXmP7neN08nhz4KQDat
// SIG // DClUg9GMBwHy4geYZSeiRO++LliDit1sqOV0Xq88JUR7
// SIG // 3mk6ucIUdtOUQkaAkh1wERfMfrRbPcwf5IX55fbgQq66
// SIG // wjjQa00JYuHJnwxrklM+VSZxF4rQxTqHN8dIkxKdGcMH
// SIG // /11RDwuICSNmLuux/bxASU6hdOIkyWL/M6tykthjas/q
// SIG // CdJPRtTXCM1y0OfMheJLf3HDqacYU+rMInLoJ5k/wZlU
// SIG // 9wQ7kBRgIYBeGOci8qCJFnmxYAzftPkCUdR1e//vDGia
// SIG // l9B3tEauj11F86eDzR67UL5GgQpc8XlWu4XOvCU2d31J
// SIG // jwHqE48SviTzzTcvLGTEsK5onFPGvvmq4961ybxCcSBx
// SIG // WjCR
// SIG // End signature block
