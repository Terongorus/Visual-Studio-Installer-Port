define("cpuSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={851:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(117),i(117),i(117)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuCountersDataSeries=void 0;class g{constructor(e,t,s,a,m,_,T){this._logger=u.getLogger("CpuCountersDataSeries"),this._cachedPoints=new Map,this._drawFill=!1,this._pkeyToColorIdx=new Map,this._droppedRequests=0,this._currentTimespan=new l.JsonTimespan(l.BigNumber.zero,l.BigNumber.zero),this.legendData=[],this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new o.AggregatedEvent,this._viewEventManager=d.getViewEventManager(),this._isCollectionActive=!1,this._processesInfo=new Map,this._usedColors=new Set,this._samples=250,this._currentTimespan=t,this._unitConverter=s,this._drawFill=a,this._title=m,this._tooltip=T,this._isMultiproc=_,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.width=2*g.PointRadiusInPixels+"px",this._marker.style.height=2*g.PointRadiusInPixels+"px",_?(this._processKeys=[],this._colorScheme=n.Utilities.getColorSet().map((e=>new r.ChartColorScheme(e,e))),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction)):(this._colorScheme=[new r.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)")],this._marker.style.backgroundColor=this._colorScheme[0].lineColor),this._viewEventManager.processSelectionChanged.addEventListener((e=>{this._processKeys=e.pkeys,this._usedColors.clear(),this._pkeyToColorIdx.forEach(((e,t)=>{this._processKeys.some((e=>p.getProcessKeyId(e)===t))&&this._usedColors.add(e)})),this.requestUpdate()})),this._dataWarehouseRequestHandle=c.getCurrentDocument().isActiveSession().then((e=>{this._isCollectionActive=e})).then((()=>h.loadDataWarehouse())).then((t=>{this._dw=t;const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,g.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests=0,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get graphLegendData(){return this.legendData}getLatestPoint(){if(0===this._cachedPoints.size)return null;const e=Array.from(this._cachedPoints.values()).map((e=>e[e.length-1]));return e.sort(((e,t)=>t.Timestamp.compareTo(e.Timestamp))),e[e.length-1]}get cachedPoints(){return this._cachedPoints}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose(),this._isMultiproc&&i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction)}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.size;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this.getLatestPoint().Timestamp))&&this.requestUpdate()}getOccurenceIndex(e,t,i,s,r){const o=(e,t)=>t.greaterOrEqual(e);switch(r){case a.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,t,o,i,s);case a.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,t,o,i,s);case a.PointToFind.Nearest:default:{i=n.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1);const a=l.BigNumber.subtract(t,e[i]),r=l.BigNumber.subtract(e[s],t);return a.greater(r)?s:i}}}getPointAtTimestamp(e,t=a.PointToFind.Nearest,s){if(0===this._cachedPoints.size)return null;const r=[];let n={Timestamp:e,Value:0};const o=s?p.getProcessKeyId(s):null;this._cachedPoints.forEach(((i,s)=>{o&&o!==s||0===i.length||(n=i[this.getOccurenceIndex(i.map((e=>e.Timestamp)),e,0,i.length-1,t)],r.push({pkey:s,point:n}))}));let h="";r.length>1?r.forEach((e=>{const t=this._processesInfo&&this._processesInfo.size>0?this._processesInfo.get(e.pkey)?.name:e.point.ToolTip;0!==e.point.Value&&(h+=`${t}: ${this._unitConverter.formatNumber(e.point.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)}\n`)})):h+=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(n.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0));const l=r.reduce(((e,t)=>e+t.point.Value),0);return{timestamp:n.Timestamp,tooltip:h,value:l}}draw(e,t){if(0===this._cachedPoints.size||t.gridX.elapsed.equals(l.BigNumber.zero)||t.chartRect.width<=0)return;const i=Array.from(this._cachedPoints.entries());i.sort(((e,t)=>{const[,i]=e,[,s]=t;return i[0].Timestamp.compareTo(s[0].Timestamp)}));const[s,a]=i[0];let r=this.cachedPoints.size>1,n=this.drawSingleChart(a,this._colorScheme[this._pkeyToColorIdx.get(s)],e,t,r);for(let s=1;s<g.ProcessLimit&&s<i.length;s++){s!==g.ProcessLimit-1&&s!==i.length-1||(r=!1);const[a,o]=i[s];n=this.drawSingleChart(o,this._colorScheme[this._pkeyToColorIdx.get(a)],e,t,r,n)}}drawSingleChart(e,t,s,a,r,o){if(0===e.length||a.gridX.elapsed.equals(l.BigNumber.zero)||a.chartRect.width<=0)return[];a.chartRect.width!==this._samples&&(this._samples=a.chartRect.width,this.requestUpdate());const h=null!=o,u=e=>a.chartRect.height-n.Utilities.scaleToRange(e,a.gridY.min,a.gridY.max,0,a.chartRect.height),d=e=>n.Utilities.convertToPixel(e,a.gridX,a.chartRect.width,!1);s.save(),s.globalCompositeOperation="destination-over",s.lineWidth=a.chartRect.height<100?1:2,g.GapPx=s.lineWidth/2,s.fillStyle=t.lineFillColor,s.strokeStyle=r?i.Theme.getValue("plugin-background-color"):t.lineColor;const c=[],p=d(e[0].Timestamp);s.beginPath();const m=h?this.interpolateY(o,e[0],a):u(e[0].Value);if(s.moveTo(p,m),e.forEach((e=>{const t=h?this.interpolateY(o,e,a):u(e.Value);s.lineTo(d(e.Timestamp),t),c.push({timestamp:e.Timestamp,yCoordinate:t})})),s.stroke(),this._drawFill){const t=e[e.length-1];s.lineTo(d(t.Timestamp),u(a.gridY.min)),s.lineTo(p,a.chartRect.height),s.closePath(),s.fill()}const _=l.BigNumber.divideNumber(a.gridX.elapsed,a.chartRect.width);return l.BigNumber.convertFromNumber(g.CounterFrequencyPerPixel).greater(_)&&e.forEach((e=>{s.beginPath();const t=h?this.interpolateY(o,e,a):u(e.Value);s.arc(d(e.Timestamp),t,g.PointRadiusInPixels,0,2*Math.PI),s.fill()})),s.restore(),c}interpolateY(e,t,i){const s=t.Timestamp,r=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,a.PointToFind.LessThanOrEqual)],o=e[this.getOccurenceIndex(e.map((e=>e.timestamp)),s,0,e.length-1,a.PointToFind.GreaterThanOrEqual)],h=(l=t.Value,i.chartRect.height-n.Utilities.scaleToRange(l,i.gridY.min,i.gridY.max,0,i.chartRect.height));var l;if(o.timestamp.compareTo(s)<0)return h;const u=n.Utilities.linearInterpolate(s,r.timestamp,r.yCoordinate,o.timestamp,o.yCoordinate),d=i.chartRect.height<=u?0:i.chartRect.height-(u-g.GapPx);return Math.max(h-d,0)}onThemeChanged(){const e=n.Utilities.getColorSet();this._colorScheme=e.map((e=>new r.ChartColorScheme(e,e))),this.requestUpdate()}requestUpdate(){if(this._dataWarehouseRequestHandle)return void this._droppedRequests++;if(this._currentTimespan.elapsed.equals(l.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=l.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=l.BigNumber.subtract(this._currentTimespan.begin,l.BigNumber.min(e,this._currentTimespan.begin)),i=l.BigNumber.multiply(l.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=l.BigNumber.add(i,l.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r={type:"SamplePoints",begin:i.jsonValue,end:a.jsonValue,samples:Math.max(this._samples,2),processKeys:this._processKeys};this._dataWarehouseRequestHandle=this._countersResult.getResult(r).then((e=>{const t=Array.isArray(e)?e:[e];this.cachePoints(t)})).then((()=>{if(!this._isCollectionActive){const e={customDomain:{Task:"GetProcesses"}};return this._dw.getFilteredData(e,g.analyzerId).then((e=>e.getResult({type:"GetProcesses"}))).then((e=>{e.forEach((e=>{this._processesInfo.set(p.getProcessKeyId(e.key),{name:""===e.key.name?e.key.pid.toString():e.key.name,pid:e.key.pid})}))}))}return Promise.resolve()})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests>0&&(this._logger.info(`Dropped ${this._droppedRequests} requests to the DataWarehouse`),window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutRollingGraph),this._droppedRequests=0)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){this.cachedPoints.clear(),e.forEach((e=>{if(0===e.p.length)return;const t=p.getProcessKeyId(e.key);this._cachedPoints.has(t)||this._cachedPoints.set(t,[]),e.p.forEach((s=>{const a=new l.BigNumber(s.t.h,s.t.l);this._seriesMin=Math.min(this._seriesMin,s.v),this._seriesMax=Math.max(this._seriesMax,s.v),this._cachedPoints.get(t).push({Timestamp:a,Value:s.v,ToolTip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",e.key.pid)})}))})),this.setLegendData(e),this._newDataEvent.invokeEvent(this)}setLegendData(e){this.legendData=[];const t=this._processesInfo&&this._processesInfo.size>0;let s=0;for(let a=0;a<g.ProcessLimit&&a<e.length;a++){const r=e[a],n=p.getProcessKeyId(r.key);let o;const h=this._pkeyToColorIdx.get(n);if(void 0!==h)o=this._colorScheme[h];else{for(;this._usedColors.has(s);)s=(s+1)%this._colorScheme.length;o=this._colorScheme[s],this._usedColors.add(s),this._pkeyToColorIdx.set(n,s)}const l=i.Resources.getString("/DiagnosticsHubSwimlaneResources/ProcessIdFormat",r.key.pid),u=t?this._processesInfo.get(n).name:l;this.legendData.push({color:o.lineFillColor,legendText:u,legendTooltip:l})}}}t.CpuCountersDataSeries=g,g.PointRadiusInPixels=2.5,g.CounterFrequencyPerPixel=1e8/(2*g.PointRadiusInPixels+4),g.ProcessLimit=5,g.GapPx=2}.apply(t,s),void 0===a||(e.exports=a)},68:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(851),i(67),i(479),i(560)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneFactory=void 0,t.CpuSwimlaneFactory=function(e,t,g,m,_,T){const w=new l.SwimlaneConfiguration(e,_,m);w.header.isBodyExpanded=t;const C=w.graph,v=new i.LocalizedUnitConverter(C.jsonConfig.Units,C.resources),S=[],R=new u.CpuCountersDataSeries(C.jsonConfig.Series[0].DataSource.CounterId,w.graph.timeRange,new i.LocalizedUnitConverter(C.jsonConfig.Units,C.resources),!0,w.graph.resources[C.jsonConfig.Series[0].Legend],C.jsonConfig.IsMultiproc,w.graph.resources[C.jsonConfig.Series[0].LegendTooltip]);S.push(R);const P=new d.EnabledDataSeries(R,C.jsonConfig.EnabledAtStart,C.jsonConfig.IsMultiproc,w.graph.resources.CpuGraphProfilingEnabled);if(S.push(P),!C.jsonConfig.IsCollecting){const e=new c.HighlightDataSeries(R,w.graph.timeRange,w.graph.resources.CpuGraphCurrentFunction);S.push(e)}w.graph.jsonConfig.Series=[];const b=new r.MultiSeriesGraph(w.graph,S);b.container.setAttribute("aria-label",e.Title);const y=new n.Scale(w.graph.scale,s.ScaleType.Left,v),f=new n.Scale(w.graph.scale,s.ScaleType.Right,v);b.scaleChangedEvent.addEventListener(y.onScaleChanged.bind(y)),b.scaleChangedEvent.addEventListener(f.onScaleChanged.bind(f)),w.header.unit=w.graph.unit;const D=new h.SwimlaneBase(w.header,w.graph.height,_,T);return b.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D)),g?D.addMainRegionControl(new o.SelectionOverlay(b,_,T,w.id)):D.addMainRegionControl(b),D.addMainRegionControl(new a.GridLineRenderer(_)),D.addLeftRegionControl(y),D.addRightRegionControl(f),C.jsonConfig.IsMultiproc&&D.addTitleControl(new p.CustomLegend(R)),D}}.apply(t,s),void 0===a||(e.exports=a)},319:(e,t,i)=>{var s,a;s=[i,t,i(226),i(117)],a=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneMarshaler=void 0;let a=null;t.CpuSwimlaneMarshaler=class{constructor(){null===a&&(a=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.CpuSampling.CpuToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(a,"GraphHighlightChangedEvent")}isToolSupported(){return a._call("isToolSupported")}isGraphHighlightingEnabled(){return a._call("isGraphHighlightingEnabled")}updateGraphHighlight(e,t){return a._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return a._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}getCurrentResultStatus(){return a._call("getCurrentResultStatus")}}}.apply(t,s),void 0===a||(e.exports=a)},67:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319),i(117)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class p{constructor(e,t,s,a){this._logger=u.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._droppedRequest=!1,this._newDataEvent=new o.AggregatedEvent,this._colorScheme=new r.ChartColorScheme("#92AB00","#AECD00"),this._title=a,this._tooltip=a,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*p.PointRadiusInPixels+"px",this._marker.style.height=2*p.PointRadiusInPixels+"px",this._isMultiproc=s,s&&(this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction),this._patternCanvas=new OffscreenCanvas(5,5),this.drawHashPattern()),this._cpuDataSeries=e;const n=new d.CpuSwimlaneMarshaler;this._dataWarehouseRequestHandle=n.isToolSupported().then((e=>e?(this._enabledAtStart=t,c.getCurrentDocument().isActiveSession()):Promise.resolve(null))).then((e=>(this._isCollectionActive=e,h.loadDataWarehouse()))).then((e=>{const t={customDomain:{CounterId:p.counterId}};return e.getFilteredData(t,p.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"CpuTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.size||0===this._toggleEvents.length&&!this._enabledAtStart)return null;const i={Timestamp:e,Value:0},s=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=n.Utilities.findLessThan(this._toggleEvents,i,s);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this._cpuDataSeries.getPointAtTimestamp(e,t);return{timestamp:o.timestamp,tooltip:this._tooltip,value:o.value}}onDataUpdate(e){this.requestUpdate()}draw(e,t){0!==this._cpuDataSeries.cachedPoints.size&&0!==t.chartRect.width&&(e.save(),this._isMultiproc?this.drawMultiLine(e,t):this.drawSingleLine(e,t),e.restore())}drawHashPattern(){const e=this._patternCanvas.getContext("2d");e.clearRect(0,0,5,5),e.strokeStyle=i.Theme.getValue("diagnostics-host-border"),e.fillStyle="rgb(0, 0, 0, 0)",e.fillRect(0,0,5,5),e.moveTo(0,5),e.lineTo(5,0),e.stroke()}onThemeChanged(){this.drawHashPattern(),this.requestUpdate()}drawSingleLine(e,t){e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=this._cpuDataSeries.cachedPoints.values().next().value;if(0===i.length||0===t.chartRect.width)return;let s=0,r=i.length-1,n=this._enabledAtStart;for(const o of this._toggleEvents)o.Value>.5?(s=this.getPointIndex(i,o.Timestamp,0,i.length-1,a.PointToFind.Nearest),n=!0):(r=this.getPointIndex(i,o.Timestamp,0,i.length-1,a.PointToFind.Nearest),n=!1,this.drawBetweenIndices(e,t,s,r));n&&this.drawBetweenIndices(e,t,s,i.length-1)}drawMultiLine(e,t){let i=l.BigNumber.zero,s=this._cpuDataSeries.getLatestPoint().Timestamp,a=this._enabledAtStart;for(const r of this._toggleEvents)r.Value>.5?(a=!0,s=r.Timestamp,this.drawBetweenTimestamps(e,t,i,s)):(a=!1,i=r.Timestamp);if(!a){const s=this._isCollectionActive?this._cpuDataSeries.getLatestPoint().Timestamp:null;this.drawBetweenTimestamps(e,t,i,s)}}drawBetweenIndices(e,t,i,s){const a=this._cpuDataSeries.cachedPoints.values().next().value;e.beginPath();for(let r=i;r<=s;++r)e.lineTo(this.getXCoordinate(a[r].Timestamp,t),this.getYCoordinate(a[r].Value,t));e.stroke(),e.lineTo(this.getXCoordinate(a[s].Timestamp,t),this.getYCoordinate(t.gridY.min,t)),e.lineTo(this.getXCoordinate(a[i].Timestamp,t),t.chartRect.height),e.closePath(),e.fill();const r=l.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(l.BigNumber.convertFromNumber(p.CounterFrequencyPerPixel).greater(r))for(let r=i;r<=s;++r)e.beginPath(),e.arc(this.getXCoordinate(a[r].Timestamp,t),this.getYCoordinate(a[r].Value,t),p.PointRadiusInPixels,0,2*Math.PI),e.fill()}drawBetweenTimestamps(e,t,i,s){const a=e.createPattern(this._patternCanvas,"repeat");e.fillStyle=a;const r=this.getXCoordinate(i,t),n=null===s?t.chartRect.width-r:this.getXCoordinate(s,t)-r;e.fillRect(r,0,n,t.chartRect.height)}getXCoordinate(e,t){return n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1)}getYCoordinate(e,t){return t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height)}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new l.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,s,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),h={Timestamp:t,Value:0};switch(r){case a.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,h,o,i,s);case a.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,h,o,i,s);case a.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,h,o),s=Math.min(i+1,e.length-1),a=l.BigNumber.subtract(t,e[i].Timestamp),r=l.BigNumber.subtract(e[s].Timestamp,t);return a.greater(r)?s:i}}}}t.EnabledDataSeries=p,p.PointRadiusInPixels=2.5,p.CounterFrequencyPerPixel=1e8/(2*p.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},479:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319),i(886)],a=function(e,t,i,s,a,r,n,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._droppedRequest=!1,this._newDataEvent=new n.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._cpuSwimlaneMarshaler=new u.CpuSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new a.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._cpuDataSeries=e,this._currentTimespan=t,this._cpuSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._dataWarehouseRequestHandle=o.loadDataWarehouse().then((e=>{if(e){this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}}))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._cpuSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.size||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._cpuDataSeries.cachedPoints.size||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((r=>{const n=i(r),o=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.LessThanOrEqual),h=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=a(o.value),d=i(h.timestamp),c={x:n,y:u+(a(h.value)-u)/(d-l)*(n-l)};e.beginPath(),e.moveTo(c.x+.5,a(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){if(this._dataWarehouseRequestHandle)return void(this._droppedRequest=!0);if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r=this._rowId,n=this._rowType;this._dataWarehouseRequestHandle=this._cpuSwimlaneMarshaler.isGraphHighlightingEnabled().then((e=>e?this._cpuSwimlaneMarshaler.getCurrentResultStatus():null)).then((e=>{if(!e)return c.EmptyOccurrencesDto;if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(n!==d.RowType.CallTreeNode&&n!==d.RowType.Function&&n!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:a.jsonValue,rowId:r,rowType:n,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps?e.timestamps.map((e=>new h.BigNumber(e.h,e.l))):[],this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}getOccurrencePointIndex(e,t,i,a,n){const o=(e,t)=>t.greater(e);switch(n){case s.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,t,o,i,a);case s.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,t,o,i,a);case s.PointToFind.Nearest:default:{const i=r.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i]),n=h.BigNumber.subtract(e[s],t);return a.greater(n)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===a||(e.exports=a)},371:(e,t,i)=>{var s,a;s=[i,t,i(68)],a=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.CpuSwimlaneFactory=i.CpuSwimlaneFactory}.apply(t,s),void 0===a||(e.exports=a)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,a,r,n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(n=t.ResultTaskType||(t.ResultTaskType={}))[n.Expand=1]="Expand",n[n.Search=2]="Search",n[n.GetData=3]="GetData",n[n.Sort=4]="Sort",(r=t.RowType||(t.RowType={}))[r.Unknown=0]="Unknown",r[r.Process=1]="Process",r[r.Module=2]="Module",r[r.Function=3]="Function",r[r.Thread=4]="Thread",r[r.CallTreeNode=5]="CallTreeNode",r[r.Allocation=6]="Allocation",(a=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[a.NotStarted=0]="NotStarted",a[a.InProgress=1]="InProgress",a[a.Completed=2]="Completed",a[a.Canceled=3]="Canceled",a[a.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Sampling=2]="Sampling"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},226:e=>{"use strict";e.exports=i}},a={},function e(t){var i=a[t];if(void 0!==i)return i.exports;var r=a[t]={exports:{}};return s[t](r,r.exports,e),r.exports}(371);var s,a}));
// SIG // Begin signature block
// SIG // MIIoQwYJKoZIhvcNAQcCoIIoNDCCKDACAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // ZMxXdZnNpXEtG3mhguDqLj229+uPL8xOAYBAoku7rvyg
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAABARsdAb/VysncgAA
// SIG // AAAEBDANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTI0MDkxMjIwMTExNFoX
// SIG // DTI1MDkxMTIwMTExNFowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // tCg32mOdDA6rBBnZSMwxwXegqiDEUFlvQH9Sxww07hY3
// SIG // w7L52tJxLg0mCZjcszQddI6W4NJYb5E9QM319kyyE0l8
// SIG // EvA/pgcxgljDP8E6XIlgVf6W40ms286Cr0azaA1f7vaJ
// SIG // jjNhGsMqOSSSXTZDNnfKs5ENG0bkXeB2q5hrp0qLsm/T
// SIG // WO3oFjeROZVHN2tgETswHR3WKTm6QjnXgGNj+V6rSZJO
// SIG // /WkTqc8NesAo3Up/KjMwgc0e67x9llZLxRyyMWUBE9co
// SIG // T2+pUZqYAUDZ84nR1djnMY3PMDYiA84Gw5JpceeED38O
// SIG // 0cEIvKdX8uG8oQa047+evMfDRr94MG9EWwIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFPIboTWxEw1PmVpZS+AzTDwo
// SIG // oxFOMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDI5MjMwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQCI5g/S
// SIG // KUFb3wdUHob6Qhnu0Hk0JCkO4925gzI8EqhS+K4umnvS
// SIG // BU3acsJ+bJprUiMimA59/5x7WhJ9F9TQYy+aD9AYwMtb
// SIG // KsQ/rst+QflfML+Rq8YTAyT/JdkIy7R/1IJUkyIS6srf
// SIG // G1AKlX8n6YeAjjEb8MI07wobQp1F1wArgl2B1mpTqHND
// SIG // lNqBjfpjySCScWjUHNbIwbDGxiFr93JoEh5AhJqzL+8m
// SIG // onaXj7elfsjzIpPnl8NyH2eXjTojYC9a2c4EiX0571Ko
// SIG // mhENF3RtR25A7/X7+gk6upuE8tyMy4sBkl2MUSF08U+E
// SIG // 2LOVcR8trhYxV1lUi9CdgEU2CxODspdcFwxdT1+G8YNc
// SIG // gzHyjx3BNSI4nOZcdSnStUpGhCXbaOIXfvtOSfQX/UwJ
// SIG // oruhCugvTnub0Wna6CQiturglCOMyIy/6hu5rMFvqk9A
// SIG // ltIJ0fSR5FwljW6PHHDJNbCWrZkaEgIn24M2mG1M/Ppb
// SIG // /iF8uRhbgJi5zWxo2nAdyDBqWvpWxYIoee/3yIWpquVY
// SIG // cYGhJp/1I1sq/nD4gBVrk1SKX7Do2xAMMO+cFETTNSJq
// SIG // fTSSsntTtuBLKRB5mw5qglHKuzapDiiBuD1Zt4QwxA/1
// SIG // kKcyQ5L7uBayG78kxlVNNbyrIOFH3HYmdH0Pv1dIX/Mq
// SIG // 7avQpAfIiLpOWwcbjzCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xgholMIIaIQIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAE
// SIG // BGx0Bv9XKydyAAAAAAQEMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCAiXTWLrqLIQjzNuYzR216ewigfH4IUj0v6
// SIG // Hj78GZmK7TBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBAAtWAoYi
// SIG // QlRKWb9WGZKyLPWFg39G2zl9oAKF6vkFFIsgxlJ3zyDN
// SIG // 9HPlPth02cAC8ctYKZXer19uAadegLnbOqT+BquKn3DS
// SIG // hXCDEycM3rbGwoUiL1BNhmAsCPDb+jantoiEbO+ox6wr
// SIG // E0MWC5dzcXa3M7DXosYQL3x1oHnCZl0GhuOCE/8mpviE
// SIG // iuSPsZAYWtJ+6P/syHFYB92uLdJTrwywz9ApviJbZs8H
// SIG // Epsqld2sj5BcHPhOcd8zVPR++gQOeZEsRnavKVRaNTwD
// SIG // K1AJ16hjfoczCWbYwwmvm9KgPYM0+E1/xbxLXcaixjyu
// SIG // BDe6AdKDY33ZgWWlA2VnRlgjx5ihghevMIIXqwYKKwYB
// SIG // BAGCNwMDATGCF5swgheXBgkqhkiG9w0BBwKggheIMIIX
// SIG // hAIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBWQYLKoZIhvcN
// SIG // AQkQAQSgggFIBIIBRDCCAUACAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgLpT+ujaUDq9EwaAxj017
// SIG // uQstEsyUejq3qYK/lR1cR5ACBmhSrnKYphgSMjAyNTA2
// SIG // MzAxNDM3NDguOTdaMASAAgH0oIHZpIHWMIHTMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQg
// SIG // SXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjozMjFBLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaCCEf4wggcoMIIFEKADAgECAhMzAAAB+KOh
// SIG // JgwMQEj+AAEAAAH4MA0GCSqGSIb3DQEBCwUAMHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwMB4XDTI0MDcyNTE4
// SIG // MzEwOFoXDTI1MTAyMjE4MzEwOFowgdMxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVs
// SIG // YW5kIE9wZXJhdGlvbnMgTGltaXRlZDEnMCUGA1UECxMe
// SIG // blNoaWVsZCBUU1MgRVNOOjMyMUEtMDVFMC1EOTQ3MSUw
// SIG // IwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
// SIG // aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
// SIG // AgEAxR23pXYnD2BuODdeXs2Cu/T5kKI+bAw8cbtN50Cm
// SIG // /FArjXyL4RTqMe6laQ/CqeMTxgckvZr1JrW0Mi4F15rx
// SIG // /VveGhKBmob45DmOcV5xyx7h9Tk59NAl5PNMAWKAIWf2
// SIG // 70SWAAWxQbpVIhhPWCnVV3otVvahEad8pMmoSXrT5Z7N
// SIG // k1RnB70A2bq9Hk8wIeC3vBuxEX2E8X50IgAHsyaR9roF
// SIG // q3ErzUEHlS8YnSq33ui5uBcrFOcFOCZILuVFVTgEqSrX
// SIG // 4UiX0etqi7jUtKypgIflaZcV5cI5XI/eCxY8wDNmBprh
// SIG // YMNlYxdmQ9aLRDcTKWtddWpnJtyl5e3gHuYoj8xuDQ0X
// SIG // ZNy7ESRwJIK03+rTZqfaYyM4XSK1s0aa+mO69vo/NmJ4
// SIG // R/f1+KucBPJ4yUdbqJWM3xMvBwLYycvigI/WK4kgPog0
// SIG // UBNczaQwDVXpcU+TMcOvWP8HBWmWJQImTZInAFivXqUa
// SIG // Bbo3wAfPNbsQpvNNGu/12pg0F8O/CdRfgPHfOhIWQ0D8
// SIG // ALCY+LsiwbzcejbrVl4N9fn2wOg2sDa8RfNoD614I0pF
// SIG // jy/lq1NsBo9V4GZBikzX7ZjWCRgd1FCBXGpfpDikHjQ0
// SIG // 5YOkAakdWDT2bGSaUZJGVYtepIpPTAs1gd/vUogcdiL5
// SIG // 1o7shuHIlB6QSUiQ24XYhRbbQCECAwEAAaOCAUkwggFF
// SIG // MB0GA1UdDgQWBBS9zsZzz57QlT5nrt/oitLv1OQ7tjAf
// SIG // BgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBf
// SIG // BgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBU
// SIG // aW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYI
// SIG // KwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01p
// SIG // Y3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEw
// SIG // KDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQM
// SIG // MAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAYfk8GzzpEVnGl7y6oXoytCb4
// SIG // 2Hx6TOA0+dkaBI36ftDE9tLubUa/xMbHB5rcNiRhFHZ9
// SIG // 3RefdPpc4+FF0DAl5lP8xKAO+293RWPKDFOFIxgtZY08
// SIG // t8D9cSQpgGUzyw3lETZebNLEA17A/CTpA2F9uh8j84Ky
// SIG // geEbj+bidWDiEfayoH2A5/5ywJJxIuLzFVHacvWxSCKo
// SIG // F9hlSrZSG5fXWS3namf4tt690UT6AGyWLFWe895coFPx
// SIG // m/m0UIMjjp9VRFH7nb3Ng2Q4gPS9E5ZTMZ6nAlmUicDj
// SIG // 0NXAs2wQuQrnYnbRAJ/DQW35qLo7Daw9AsItqjFhbMcG
// SIG // 68gDc4j74L2KYe/2goBHLwzSn5UDftS1HZI0ZRsqmNHI
// SIG // 0TZvvUWX9ajm6SfLBTEtoTo6gLOX0UD/9rrhGjdkiCw4
// SIG // SwU5osClgqgiNMK5ndk2gxFlDXHCyLp5qB6BoPpc82Rh
// SIG // O0yCzoP9gv7zv2EocAWEsqE5+0Wmu5uarmfvcziLfU1S
// SIG // Y240OZW8ld4sS8fnybn/jDMmFAhazV1zH0QERWEsfLSp
// SIG // wkOXaImWNFJ5lmcnf1VTm6cmfasScYtElpjqZ9GooCmk
// SIG // 1XFApORPs/PO43IcFmPRwagt00iQSw+rBeIH00KQq+FJ
// SIG // T/62SB70g9g/R8TS6k6b/wt2UWhqrW+Q8lw6Xzgex/Yw
// SIG // ggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAV
// SIG // MA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0
// SIG // aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAx
// SIG // ODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEF
// SIG // AAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7V
// SIG // gtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/H
// SIG // ZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKD
// SIG // RLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gm
// SIG // U3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36M
// SIG // EBydUv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+y
// SIG // OSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoF
// SIG // VZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJi
// SIG // ss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGa
// SIG // RnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+Autuqfjbs
// SIG // Nkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afo
// SIG // mXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9
// SIG // ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZk
// SIG // i1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y
// SIG // 1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV
// SIG // 2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0C
// SIG // AwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEw
// SIG // IwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/
// SIG // LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnp
// SIG // cjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8G
// SIG // CCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYD
// SIG // VR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9
// SIG // lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoG
// SIG // CCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcN
// SIG // AQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pc
// SIG // FLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHk
// SIG // wo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AF
// SIG // vonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4
// SIG // U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2
// SIG // EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8Atq
// SIG // gcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mj
// SIG // dAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZM
// SIG // cm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQE
// SIG // cb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2f
// SIG // pCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBM
// SIG // drVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L
// SIG // +DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJ
// SIG // C4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU
// SIG // 5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/
// SIG // 2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIDWTCC
// SIG // AkECAQEwggEBoYHZpIHWMIHTMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFuZCBP
// SIG // cGVyYXRpb25zIExpbWl0ZWQxJzAlBgNVBAsTHm5TaGll
// SIG // bGQgVFNTIEVTTjozMjFBLTA1RTAtRDk0NzElMCMGA1UE
// SIG // AxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaIj
// SIG // CgEBMAcGBSsOAwIaAxUAtkQt/ebWSQ5DnG+aKRzPELCF
// SIG // E9GggYMwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UE
// SIG // CBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEe
// SIG // MBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYw
// SIG // JAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0Eg
// SIG // MjAxMDANBgkqhkiG9w0BAQsFAAIFAOwM/iAwIhgPMjAy
// SIG // NTA2MzAxMjE0MjRaGA8yMDI1MDcwMTEyMTQyNFowdzA9
// SIG // BgorBgEEAYRZCgQBMS8wLTAKAgUA7Az+IAIBADAKAgEA
// SIG // AgIVsAIB/zAHAgEAAgISuzAKAgUA7A5PoAIBADA2Bgor
// SIG // BgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIB
// SIG // AAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBCwUA
// SIG // A4IBAQAliHXlkfRA8Tfko6UpmRS/RdjG4qA7fgKXOP5w
// SIG // pYF5fFWh7JeezUKvOGdRJAYy5rXLO2u9G+GJK0UfpvUi
// SIG // DDQ4bpEtdfqazZ/PSmIEKbvY20+exWA6Jns6KjrOjCep
// SIG // ZpLLQ3GBtaXwk4KXUgnPiaddJA+QjU3RdAhYkruXuWZW
// SIG // LLyAqLufjAmhPVyfQIfKHOAWmN9RB9eK+Hle6C0nUf62
// SIG // Ky4QzZh0zPe/ffwn0rYvORDST/HRaaHxJrbL1nOrao0g
// SIG // 3Nc3VSINe0md4T9Ph6xqO/uZGCfQ1F4+rC8NNzUJzJYA
// SIG // r+2J25ZDeIeBKcpvseyDvW9+dwnqYnSEvWwVimaZMYIE
// SIG // DTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNV
// SIG // BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
// SIG // HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEm
// SIG // MCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENB
// SIG // IDIwMTACEzMAAAH4o6EmDAxASP4AAQAAAfgwDQYJYIZI
// SIG // AWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG
// SIG // 9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQg4+B5iwVLi8aE
// SIG // RcNJwznNOmQlvd4fjNQyoWla0GK9v10wgfoGCyqGSIb3
// SIG // DQEJEAIvMYHqMIHnMIHkMIG9BCDvzDPyXw1UkAUFYt8b
// SIG // R4UdjM90Qv5xnVaiKD3I0Zz3WjCBmDCBgKR+MHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB+KOhJgwM
// SIG // QEj+AAEAAAH4MCIEIObLkX9p73MX1J8jmxq9GozhCmZs
// SIG // GdDtmsxEr6KoP6Z6MA0GCSqGSIb3DQEBCwUABIICAJUV
// SIG // CV3jd/vmFONoPpaRrLdMz1EjG0uHiUcQkFXtuX1P1Vem
// SIG // 0PrfVyjT99moG1Cm3q6kPJM3nnFEyZpH64jC/W7KDygK
// SIG // hplzFEVbqsrNmTmUU5WMn8nd5AKfNqf++0ncDwEAoDRt
// SIG // Fk8Wv7iPTx1R7hmm4FEKH2xSSI9Leq2TYu5L7uutjZVY
// SIG // fAu6X1NDFe3TuKtZGqitkEf6hmECCeSXBmJL/eHUUfWm
// SIG // RR6brZMgFLNkTppnI1D+8WVVLoKothSxdYry3nUoniFP
// SIG // xp0htKcL07GEYANxCSXY9S7yE+NS5s/G68P94IMYo+99
// SIG // ZxK4myw+Z6cyA7EOWJEBdl8bLJvactjsHFomadApyVuO
// SIG // ob+iN3NDF2ZuvUdQDBQVf7+4vSAwhtlLT+yDiAQIDJ8W
// SIG // 3xd4J1tcqcg4RcV925Hiqg8axfQaZJord9mPtZU95R/b
// SIG // XdPxfZ4strzZh90WK2zv2GrpOG4YeRB9oSuaox1dV0pv
// SIG // C0QgApPZK0LrvhfaB0VKg+yut5kx8Q3jFxMMM9EyWea5
// SIG // iq7CisHVxMtPeQs9TPvZLMZdJF938ng3hW/xqZlY69JO
// SIG // BDzoMyjNus6Vd/N2hDgcolX7yEgJpN2ztcjIIPzky3Cl
// SIG // ORvie3eDqy6us3WTrLIFhre69l9Ia4JxAM9m8tRmX/AD
// SIG // 9h/4hFS3oDKbKVTRSeim
// SIG // End signature block
