{
  "kind": "code.generic",
  "order": 20,
  "model": {
    "snippetModels": [
      {
        "name": "EnsureAddAzureAppConfigurationMinimalAppModel",
        "condition": "MinimalAppModel",
        "snippets": [
          {
            "kind": "Empty",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Invocation",
                  "properties": {
                    "Invocation": "AddAzureAppConfiguration",
                    "TypeName": "Microsoft.Extensions.Configuration.AzureAppConfigurationExtensions"
                  }
                }
              ]
            },
            "body": "",
            "tokens": {}
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Statement",
                  "properties": {
                    "Statement": "builder.Services.AddRazorPages();",
                    "CodeOperation": "InsertBefore"
                  }
                }
              ]
            },
            "body": "\r\nif (Uri.TryCreate(@@localVar@@.Configuration[`@@connectionId@@`], UriKind.Absolute, out var endpoint))\r\n{\r\n    // Use Azure Active Directory authentication.\r\n    // The identity of this app should be assigned 'App Configuration Data Reader' or 'App Configuration Data Owner' role in App Configuration.\r\n    // For more information, please visit https://aka.ms/vs/azure-app-configuration/concept-enable-rbac\r\n    @@localVar@@.Configuration.AddAzureAppConfiguration(options =>\r\n    {\r\n        options.Connect(endpoint, new DefaultAzureCredential())\r\n        .ConfigureRefresh(refresh =>\r\n        {\r\n            // All configuration values will be refreshed if the sentinel key changes.\r\n            refresh.Register(`TestApp:Settings:Sentinel`, refreshAll: true);\r\n        });\r\n    });\r\n}\r\n@@localVar@@.Services.AddAzureAppConfiguration();\r\n",
            "tokens": {
              "localVar": {
                "name": "localVar",
                "kind": "LocalVariable",
                "properties": {
                  "TypeName": "Microsoft.AspNetCore.Builder.WebApplicationBuilder?",
                  "Closure": true
                }
              },
              "connectionId": {
                "name": "connectionId",
                "kind": "ExternalValue",
                "properties": {
                  "ModelPropertyName": "connectionId"
                }
              }
            }
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Statement",
                  "properties": {
                    "Statement": "builder.Services.AddControllers();",
                    "CodeOperation": "InsertBefore"
                  }
                }
              ]
            },
            "body": "\r\nif (Uri.TryCreate(@@localVar@@.Configuration[`@@connectionId@@`], UriKind.Absolute, out var endpoint))\r\n{\r\n    // Use Azure Active Directory authentication.\r\n    // The identity of this app should be assigned 'App Configuration Data Reader' or 'App Configuration Data Owner' role in App Configuration.\r\n    // For more information, please visit https://aka.ms/vs/azure-app-configuration/concept-enable-rbac\r\n    @@localVar@@.Configuration.AddAzureAppConfiguration(options =>\r\n    {\r\n        options.Connect(endpoint, new DefaultAzureCredential())\r\n        .ConfigureRefresh(refresh =>\r\n        {\r\n            // All configuration values will be refreshed if the sentinel key changes.\r\n            refresh.Register(`TestApp:Settings:Sentinel`, refreshAll: true);\r\n        });\r\n    });\r\n}\r\n@@localVar@@.Services.AddAzureAppConfiguration();\r\n",
            "tokens": {
              "localVar": {
                "name": "localVar",
                "kind": "LocalVariable",
                "properties": {
                  "TypeName": "Microsoft.AspNetCore.Builder.WebApplicationBuilder?",
                  "Closure": true
                }
              },
              "connectionId": {
                "name": "connectionId",
                "kind": "ExternalValue",
                "properties": {
                  "ModelPropertyName": "connectionId"
                }
              }
            }
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Statement",
                  "properties": {
                    "Statement": "builder.Services.AddControllersWithViews();",
                    "CodeOperation": "InsertBefore"
                  }
                }
              ]
            },
            "body": "\r\nif (Uri.TryCreate(@@localVar@@.Configuration[`@@connectionId@@`], UriKind.Absolute, out var endpoint))\r\n{\r\n    // Use Azure Active Directory authentication.\r\n    // The identity of this app should be assigned 'App Configuration Data Reader' or 'App Configuration Data Owner' role in App Configuration.\r\n    // For more information, please visit https://aka.ms/vs/azure-app-configuration/concept-enable-rbac\r\n    @@localVar@@.Configuration.AddAzureAppConfiguration(options =>\r\n    {\r\n        options.Connect(endpoint, new DefaultAzureCredential())\r\n        .ConfigureRefresh(refresh =>\r\n        {\r\n            // All configuration values will be refreshed if the sentinel key changes.\r\n            refresh.Register(`TestApp:Settings:Sentinel`, refreshAll: true);\r\n        });\r\n    });\r\n}\r\n@@localVar@@.Services.AddAzureAppConfiguration();\r\n",
            "tokens": {
              "localVar": {
                "name": "localVar",
                "kind": "LocalVariable",
                "properties": {
                  "TypeName": "Microsoft.AspNetCore.Builder.WebApplicationBuilder?",
                  "Closure": true
                }
              },
              "connectionId": {
                "name": "connectionId",
                "kind": "ExternalValue",
                "properties": {
                  "ModelPropertyName": "connectionId"
                }
              }
            }
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "LocalVariable",
                  "properties": {
                    "TypeName": "Microsoft.AspNetCore.Builder.WebApplication?",
                    "CodeOperation": "InsertBefore"
                  },
                  "locationTokenName": "localWebAppVar"
                }
              ]
            },
            "body": "\r\nif (Uri.TryCreate(@@localVar@@.Configuration[`@@connectionId@@`], UriKind.Absolute, out var endpoint))\r\n{\r\n    // Use Azure Active Directory authentication.\r\n    // The identity of this app should be assigned 'App Configuration Data Reader' or 'App Configuration Data Owner' role in App Configuration.\r\n    // For more information, please visit https://aka.ms/vs/azure-app-configuration/concept-enable-rbac\r\n    @@localVar@@.Configuration.AddAzureAppConfiguration(options =>\r\n    {\r\n        options.Connect(endpoint, new DefaultAzureCredential())\r\n        .ConfigureRefresh(refresh =>\r\n        {\r\n            // All configuration values will be refreshed if the sentinel key changes.\r\n            refresh.Register(`TestApp:Settings:Sentinel`, refreshAll: true);\r\n        });\r\n    });\r\n}\r\n@@localVar@@.Services.AddAzureAppConfiguration();\r\n",
            "tokens": {
              "localVar": {
                "name": "localVar",
                "kind": "LocalVariable",
                "properties": {
                  "TypeName": "Microsoft.AspNetCore.Builder.WebApplicationBuilder?",
                  "Closure": true
                }
              },
              "connectionId": {
                "name": "connectionId",
                "kind": "ExternalValue",
                "properties": {
                  "ModelPropertyName": "connectionId"
                }
              }
            }
          }
        ]
      },
      {
        "name": "EnsureUseAzureAppConfigurationMinimalAppModel",
        "condition": "MinimalAppModel",
        "snippets": [
          {
            "kind": "Empty",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Invocation",
                  "properties": {
                    "Invocation": "AddAzureAppConfiguration",
                    "TypeName": "Microsoft.Extensions.Configuration.AzureAppConfigurationExtensions"
                  }
                }
              ]
            },
            "body": "",
            "tokens": {}
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Statement",
                  "properties": {
                    "Statement": "app.UseRouting();",
                    "CodeOperation": "InsertBefore"
                  }
                }
              ]
            },
            "body": "app.UseAzureAppConfiguration();",
            "tokens": {}
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "Statement",
                  "properties": {
                    "Statement": "app.UseHttpsRedirection();",
                    "CodeOperation": "InsertBefore"
                  }
                }
              ]
            },
            "body": "app.UseAzureAppConfiguration();",
            "tokens": {}
          },
          {
            "kind": "Expression",
            "location": {
              "parts": [
                {
                  "kind": "TopLevelMethod",
                  "properties": {}
                },
                {
                  "kind": "LocalVariable",
                  "properties": {
                    "TypeName": "Microsoft.AspNetCore.Builder.WebApplication?",
                    "CodeOperation": "InsertAfter"
                  },
                  "locationTokenName": "localWebAppVar"
                }
              ]
            },
            "body": "@@localVar@@.UseAzureAppConfiguration();\r\n",
            "tokens": {
              "localVar": {
                "name": "localVar",
                "kind": "LocalVariable",
                "properties": {
                  "TypeName": "Microsoft.AspNetCore.Builder.WebApplication?",
                  "Closure": true
                }
              }
            }
          }
        ]
      }
    ]
  }
}