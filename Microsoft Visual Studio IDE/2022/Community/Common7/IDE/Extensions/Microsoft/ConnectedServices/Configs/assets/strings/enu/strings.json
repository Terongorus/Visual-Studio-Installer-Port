{
  "apiAzureDependencyTypeName": "Azure API Management",
  "apiAzureDependencyTypeDescription": "Hybrid, multi-cloud management platform for APIs across all environments.",
  "apiAzureDependencyTypeRecomendation": "In order to give a consistent experience for accessing your APIs, we recommend using Azure API Management.",
  "appConfigDependencyTypeName": "Azure App Configuration",
  "appConfigDependencyTypeDescription": "Easily access the application's key-value settings and feature flags that are centrally managed in Azure.",
  "appInsightsAzureDependencyTypeName": "Azure Application Insights",
  "appInsightsAzureDependencyTypeDescription": "Monitor web app performance and usage (with connection to an instance running in Azure).",
  "appInsightsDependencyTypeName": "Application Insights",
  "appInsightsDependencyTypeDescription": "Monitor web app performance and usage.",
  "appInsightsSdkDependencyTypeName": "Application Insights Sdk (Local)",
  "appInsightsSdkDependencyTypeDescription": "Monitor web app performance and usage (without connecting to an instance running in Azure).",
  "appInsightsDependencyTypeRecomendation": "Using Application Insights is recommended for performance management and website analytics.",
  "appServiceDependencyTypeName": "Azure App Service",
  "appServiceDependencyTypeDescription": "Connect your application code to a managed infrastructure that is easy to scale",
  "cosmosdbAzureDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbAzureDependencyTypeDescription": "Use high scalable, consistent, and georeplicated data stores.",
  "cosmosdbDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbDependencyTypeDescription": "Use high scalable, consistent, and georeplicated data stores.",
  "cosmosdbEmulatorDependencyTypeName": "Azure Cosmos DB Emulator (Local)",
  "cosmosdbEmulatorDependencyTypeDescription": "Use high scalable, consistent, and georeplicated data stores.",
  "cosmosdbContainerDependencyTypeName": "Azure Cosmos DB Emulator on container (Local)",
  "cosmosdbContainerDependencyTypeDescription": "Use high scalable, consistent, and georeplicated data stores.",
  "connectionSettingName": "Connection setting _name",
  "connectionSettingValue": "Connection setting value",
  "connectionStringName": "Connection string name",
  "connectionStringValue": "Connection string _value",
  "compute": "Compute",
  "computeDependencyTypeName": "Azure compute service",
  "computeDependencyTypeDescription": "Azure compute service (AppService, Function etc)",
  "container": "Container",
  "cosmosdbAzureConnectionWarning": "To be able to access Azure Cosmos DB with managed identities, you would need to setup a data plane role-based access control and assign corresponding roles to identities used for local or deployed applications.",
  "database": "Database",
  "dotnetMsIdentity": "dotnet msidentity tool",
  "dotnetMsIdentityToolDescription": "A .NET tool which can be used to configure ASP.NET projects to use the Microsoft identity platform.",
  "dockerDesktop": "Docker Desktop",
  "dockerDesktopDescription": "Docker Desktop is needed to be installed to run containers on local machine.",
  "emulator": "Emulator",
  "endpoint": "_Endpoint",
  "environmentVariable": "Environment variable",
  "instrumentationKey": "Instrumentation key",
  "function": "Function",
  "functionDependencyTypeName": "Azure Function",
  "functionDependencyTypeDescription": "Connect your application code to a serverless compute that scales dynamically and runs code on-demand",
  "identityDependencyTypeName": "Microsoft identity platform",
  "identityDependencyTypeDescription": "Authentication for your application using Microsoft Entra ID or Azure AD B2C.",
  "identityDependencyTypeRecomendation": "For applications that authenticate users with the Microsoft identity platform (Microsoft Entra ID, Azure AD B2C, and personal Microsoft accounts).",
  "keyVaultUrl": "KeyVault URL",
  "local": "Local",
  "mongodbDependencyTypeName": "MongoDB",
  "mongodbDependencyTypeDescription": "MongoDB document databases provide high availability and easy scalability.",
  "mongodbContainerDependencyTypeName": "MongoDB on container (Local)",
  "mongodbContainerDependencyTypeDescription": "MongoDB document databases provide high availability and easy scalability.",
  "monitor": "Monitor",
  "mssqlAzureDependencyTypeName": "Azure SQL Database",
  "mssqlAzureDependencyTypeDescription": "Intelligent, scalable, cloud database service that provides the broadest SQL Server engine compatibility.",
  "mssqlContainerDependencyTypeName": "SQL Server Database on container (Local)",
  "mssqlContainerDependencyTypeDescription": "Database service hosted on a container that provides the broadest SQL Server engine compatibility.",
  "mssqlDependencyTypeName": "SQL Server Database",
  "mssqlDependencyTypeDescription": "Database service hosted on-premise that provides the broadest SQL Server engine compatibility.",
  "mssqlLocalDependencyTypeName": "SQL Server Express LocalDB (Local)",
  "mssqlLocalDependencyTypeDescription": "Local database service that provides the broadest SQL Server engine compatibility.",
  "mssqlOnpremDependencyTypeName": "SQL Server Database",
  "mssqlOnpremDependencyTypeDescription": "On-premise SQL Server Database",
  "postgresqlDependencyTypeName": "PostgreSQL",
  "postgresqlDependencyTypeDescription": "The PostgreSQL object-relational database system provides reliability and data integrity.",
  "postgresqlContainerDependencyTypeName": "PostgreSQL on container (Local)",
  "postgresqlContainerDependencyTypeDescription": "The PostgreSQL object-relational database system provides reliability and data integrity.",
  "powerPlatformDependencyTypeName": "Microsoft Power Platform",
  "powerPlatformDependencyTypeDescription": "Build applications or workflow automations with the Microsoft Power Platform connected to your Web API.",
  "redisAzureConnectionWarning": "For Azure Cache for Redis instance to use Managed Identity for Azure, you would need to enable it by manually in the Azure portal since it would require a stop and restart of this instance.",
  "redisAzureDependencyTypeName": "Azure Cache for Redis",
  "redisAzureDependencyTypeDescription": "Help your application stay responsive even as user load increases by leveraging the low latency, high-throughput capabilities of the Redis engine.",
  "redisDependencyTypeName": "Redis Cache",
  "redisDependencyTypeDescription": "Help your application stay responsive even as user load increases by leveraging the low latency, high-throughput capabilities of the Redis engine.",
  "redisContainerDependencyTypeName": "Redis Cache on container (Local)",
  "redisContainerDependencyTypeDescription": "Help your application stay responsive even as user load increases by leveraging the low latency, high-throughput capabilities of the Redis engine.",
  "rabbitmqDependencyTypeName": "RabbitMQ",
  "rabbitmqDependencyTypeDescription": "RabbitMQ is an open source multi-protocol messaging broker.",
  "rabbitmqContainerDependencyTypeName": "RabbitMQ on container (Local)",
  "rabbitmqContainerDependencyTypeDescription": "RabbitMQ is an open source multi-protocol messaging broker.",
  "secrets": "Secrets",
  "secretsDependencyTypeName": "Secrets",
  "secretsDependencyTypeDescription": "Safeguard cryptographic keys and other secrets used by cloud apps and services.",
  "secretsKeyVaultDependencyTypeName": "Azure Key Vault",
  "secretsKeyVaultDependencyTypeDescription": "Safeguard cryptographic keys and other secrets used by cloud apps and services.",
  "secretsUserDependencyTypeName": "Secrets.json (Local)",
  "secretsUserDependencyTypeDescription": "Safeguard cryptographic keys and other secrets used by cloud apps and services.",
  "signalRAzureDependencyTypeName": "Azure SignalR Service",
  "signalRAzureDependencyTypeDescription": "Easily enable real-time communications to your web application.",
  "signalRDependencyTypeName": "SignalR",
  "signalRDependencyTypeDescription": "Easily enable real-time communications to your web application.",
  "signalRDependencyTypeRecomendation": "Your application is making use of SignalR. For environments that need to scale we strongly recommend adding a dependency on Azure SignalR Service.",
  "sqlAzureLocalConnectionWarning": "To access Azure SQL Database from local machine using passwordless Microsoft Entra authentication, you would need to set your user as Microsoft Entra Admin in portal manually.",
  "sqlAzureRemoteConnectionWarning": "You will need to set the appropriate permissions on the SQL user corresponding with this Managed Identity before this connection works.",
  "sqliteDependencyTypeName": "SQLite (Local)",
  "sqliteDependencyTypeDescription": "SQLite is an in-process library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine.",
  "storageAzureDependencyTypeName": "Azure Storage",
  "storageAzureDependencyTypeDescription": "Cloud storage that is highly available, secure, durable, scalable, and redundant. Includes Azure Blob, File, Queue, and Table services.",
  "storageContainerDependencyTypeName": "Storage Azurite on container (Local)",
  "storageContainerDependencyTypeDescription": "Container with open-source emulator that provides a local environment for testing Azure blob and queue storage applications.",
  "storageDependencyTypeName": "Storage",
  "storageDependencyTypeDescription": "Cloud storage that is highly available, secure, durable, scalable, and redundant. Includes Azure Blob, File, Queue, and Table services.",
  "storageEmulatorDependencyTypeName": "Storage Azurite emulator (Local)",
  "storageEmulatorDependencyTypeDescription": "Node.js based open-source emulator that provides a local environment for testing Azure blob and queue storage applications.",
  "storage": "Storage",
  "store": "Store",
  "unknownDependencyTypeName": "Unknown",
  "unknownDependencyTypeDescription": "",
  "vsAzureStorageEmulatorComponent": "Azurite emulator",
  "vsAzureStorageEmulatorComponentDescription": "Tool for development and testing against Azure storage endpoints.",
  "vsSqlLocalDbComponent": "SQL Server Express 2016 LocalDB",
  "vsSqlLocalDbComponentDescription": "LocalDB is a lightweight version of the SQL Server Express Database Engine that is targeted for application development.",
  "vsWebWorkload": "ASP.NET and web development",
  "vsWebWorkloadDescription": "Build web applications using ASP.NET Core, ASP.NET, HTML/JavaScript, and Containers including Docker support.",
  "vaultUri": "Vault URI",
  "webApp": "Web app"
}
