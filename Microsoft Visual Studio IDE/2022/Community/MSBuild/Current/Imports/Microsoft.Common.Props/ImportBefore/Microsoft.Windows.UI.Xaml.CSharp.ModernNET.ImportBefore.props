<?xml version="1.0" encoding="utf-8"?>
<!--
***********************************************************************************************
Microsoft.Windows.UI.Xaml.CSharp.ModernNET.ImportBefore.props

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    This .props file conditionally includes a dedicated .props file with common item groups for UWP projects on .NET 9 and above,
    that should be imported before the .csproj file (such as globs for XAML items). These are in a separate file entirely so that
    the conditional import can bypass the "ignore conditions" feature of design-time builds in Visual Studio. Without that, those
    items would also be evaluated for legacy-style projects and non-UWP projects, which would cause issues and perf regressions.

    Note: because imports are evaluated in the same order they're found, we cannot actually check 'UseUwpTools' here, because that
    property is set either in the .csproj file, or in 'Microsoft.Windows.UI.Xaml.CSharp.ModernNET.ImportBefore.targets'. Because of that,
    we can simply filter this on when the modern SDK-style format is used for .csproj files (which we check with 'UsingMicrosoftNETSdk').
    This lets us skip importing this file entirely on all legacy-style .csproj projects (such as legacy UWP), to avoid regressions.
    On SDK-style projects, it's fine if design-time builds evaluate the item groups anyway, because that matches what the .NET SDK is
    already doing anyway for all C# files, all .resx files, etc.

    To further reduce design-time evaluation performance regressions as much as possible, we also include conditions for all well-known
    .NET SDKs, which we know for sure will not apply to UWP scenarios. In all of those cases, we also skip importing the .props file.
    This ensures that for projects using any of those SDKs, there will be no design-time evaluation impact at all.
  -->
  <PropertyGroup>
    <UwpToolsMicrosoftWindowsUIXamlCSharpProps Condition="'$(UwpToolsMicrosoftWindowsUIXamlCSharpProps)' == ''">$(MSBuildExtensionsPath)\Microsoft\WindowsXaml\v$(VisualStudioVersion)\8.21\Microsoft.Windows.UI.Xaml.CSharp.ModernNET.props</UwpToolsMicrosoftWindowsUIXamlCSharpProps>
  </PropertyGroup>
  <Import Condition="'$(UsingMicrosoftNETSdk)' == 'true' AND
                     '$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' AND
                     '$(UsingMicrosoftNETSdkPublish)' != 'true' AND
                     '$(UsingMicrosoftNETSdkRazor)' != 'true' AND
                     '$(UsingMicrosoftNETSdkStaticWebAssets)' != 'true' AND
                     '$(UsingMicrosoftNETSdkWeb)' != 'true' AND
                     '$(UsingMicrosoftNETSdkWebProjectSystem)' != 'true' AND
                     '$(UsingMicrosoftNETSdkWebAssembly)' != 'true' AND
                     '$(UsingMicrosoftNETSdkWorker)' != 'true' AND
                     Exists('$(UwpToolsMicrosoftWindowsUIXamlCSharpProps)') AND '$(SkipImportUwpToolsMicrosoftWindowsUIXamlCSharpProps)' != 'true'"
          Project="$(UwpToolsMicrosoftWindowsUIXamlCSharpProps)" />
</Project>
